%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (A\744\754\750\755\750\761\762\760\740\762\756\760) ()
%%Title: (Gold clock.eps)
%%CreationDate: 4/2/2010 7:40 PM
%%Canvassize: 16383
%%BoundingBox: 0 0 900 900
%%HiResBoundingBox: 0 0 900 900
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 450.5 449.5 450.5 449.5
%AI3_TileBox: 152.3398 29.04 747.6602 870.96
%AI3_DocumentPreview: Header
%AI5_ArtSize: 900 900
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -99 905 1 1131 890 18 0 0 36 117 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 16448 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDCAFFA8CAA1A1767651524B
%524B514B76527D7DA8A8FD6AFFA8A176754B4B4A754A7474757474747574
%744A4B4A514B7C7DA8CFFD62FFA1764A4B4A74749F9E9E9EC09E9E9EC09E
%C09EC0FD049E74744A744A5175A7A8FD5CFFA87C4A75749F9EC79EC79EC7
%9EC79EC79EC79EC79FC79EC79FC79EC79EC79E9F74754A7576A8FD58FFA7
%51744A9F9EC79FA59EC79F9F9EC79F9F9EC79F9F9EA59F9F9EC79FA59EC7
%9F9F9EC79F9F74754A757DFD54FFA7754A9F9FC8A5C8A5C89FC8A5C89FC8
%9FC79FC89FA59FC89FA59FC89FC89FC8A5C89FC8A5C8A5C8A5A5747575A7
%FD50FFA7757475A6A5C8A5C89FC89FA69FA69F9F9FA69FA69FA69F9F9FA6
%9F9F9FA69FA69FA69FA69FC8A5C89FC8A5C89F9F7475A7FD4CFFA8A0749F
%9FC8C8C8A6C8A6C8A0C8A0C89FC89FA0757B75754A754A754A75517575A0
%9FA69FC8A6C89FC8A6C8A6C8A6C8A6C87B747BFD4AFFA07474A6A6C8A6C8
%A6C8A0A6A0A6A0A67B754A4B4A4B4A514B52517651524B524B4B4A4B4A75
%75A09FA6A0A6A0C8A6C9A6C8A6C9A07B74A7FD47FF9F9E9FCEC9CEC8CEC9
%C9A6C9A6C87B7B4A754B76767D7DA17DA87DA87DA87DA8FD047D7C7C5175
%4B7575A0A6C9A6C9A6CEC9CEC9CEC9C874A0CFFD43FFCA749FA6CEA7CEC9
%CEA6C9A6C9A0A04A514B7C7C7D7D847D7D7DA87DA87DA87DA87DA87D7D7D
%84FD047D52754A7575A6A6C9A6C9A7CEC9CEC9C97A9FA7FD41FFC99EA6C9
%CFCECFC9CFC9CEA7C97B754A7C7C7D7DA87DA87DA87DA87EA8767D7DA876
%76527D84A87DA87DA87DA87D7D757574A0A6CEC9CEC9CFCECFCECF9F9EA7
%FD3FFFA674C8CECFA7CFC9CEA7CEA6A04A7576FD067DA87DA87DA87D7D4B
%4A4BA84B4A204A267D7DA87DA8FD067D7C7C50747BC9A7C9A7CFCECFCECF
%A69EA0FD3DFFC99ECECFCFCFFFCFCFC9CFA69F747C7D847DA87DA87DFD06
%A8764A754A7C7D754A7C517551FD05A87DA87DA87DA87D7D767B75A7CECF
%CEFD04CFFFA7A5A6FD3BFFC99FCEFD04CFCECFCFCE7B7575FD047DA87DA8
%7DA87DFD05A851754A75767D4A74A1764A75A7FD05A87DA87DA87DA87D7D
%7D7C749FA7CFC9FD05CFA7A5A6FD39FFC99FFD04CFFFCFCFCFCE9E9F7C84
%7D514A767DA87DFD08A8FFA1754A7CA7A17CA8757575FD0BA87575517D7D
%A1759FA7FFCFCFCFFFCFFFC9C8A7FD37FFC99FFD05CFAECFCFA6749F7D7D
%7D76264B4A7CA8A87DFD09A8507475FFA8FF75744AA0FD08A87DA87C744A
%4A517E7D7D759EA0FD06CFFFA7A6A7FD35FFCFA6CFCFFFCFFFCFFFCFC89E
%A07D847DA8757574757CA9A8FFA8FFA8FFA8FFA8FFA87574A0A8FFA77574
%7BA8FFA8FFA8FFA8A8A8FFA8A6749F747C7DA87D7E7C9FA6FFCFFFCFFFCF
%FFCFC9CAFD33FFCFA6FD04CFFFCFCFCFC89E7C7D7D7DA87DA1747474FD08
%A8FFA8FFA8A8747475FFA87B7475A1FFA8FFA8A8A8FFA8A8A8A9A79F749F
%7DA87DA87D7D7C9FA0CFCFFFCFFFCFFFA7C9A8FD32FFC9CFCFFFCFFFCFFF
%CFC89FA17DA87DFD05A8A1A8A8FFA8FFA8FFA8FFA8FFA8FFA89F74A0AFA7
%749FA0FFFFFFA8FFA8FFA8FFA8FFA8FFA8A7A7A8A8A87DA87D7E7CC8A6FF
%CFFFCFFFCFFFCACFFD31FFA7CFCFFFCFFFCFCFCFC99FFD047DA87DA87DFD
%0AA8FFA8FFA8FFA8A8749E7CCA749F74A7A7CAA8FFA8FFA8FFA8FFFD08A8
%7DA87DA87D7D7CA6A6CFCFFFCFFFCFFFA7CFFD2FFFCFCFFFFFCFFFFFFFCF
%CEA6A77DA87DFD06A8FFA8A87DFFA8FFA8FFFFFFA8FFFFFFA89F9EA6A79F
%9E9F7A9E9FFFAFFFFFFFA8FFA8FFA8FFA8FFA8FFFD06A87DA87DC9C9FFCF
%FD05FFCAFD2FFFCFCAFFCFFFCFFFCFCFA6A77D7D7DA87DFD06A8FF7DF827
%FFA8FFA8FFA8FFA8FFA9CF9FA6A7CA9FA69FA69FC9A9FFA8FFA8FFA8FFA8
%FFA8FFFD06A87DA87DA87D7D7DC9A7FFCFFFCFFFFFFFA8FD36FFC9A77DA8
%7DA87DFD04A8FFA8FFA87DF8F87DFFFFFFA8FD13FFA8FFFFFFA8FFA8FFA8
%FFA8FFA8FFFD06A87D7EA1CECFFD34FFCAFFFFFFCFFFCFFFA7A77D7D7DA8
%7DA87DFD04A8FFA8FFA827F8F8A8FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8
%FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD06A87DA8FD047DA7CFA8FFCF
%FFCFFFFFFFCFFD32FFCFCF7D7D7DFD06A8FFA8FFA8FFA8FFA8F8F852FD1E
%FFA8FFA8FFA8FFA8FFFD04A87DA87D7DA8FD3AFFCFFF7D7D7DA87DFD08A8
%FFA8FFA8FF52F8F8A8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFD06A87DA87DA7CAFD07FFCAFD32FF
%A87D7DFD08A8FFA8FFA8FD05FF27F827FD1FFFA8FFA8FFA8FFFD06A87EA8
%7DA8FD08FFCAFD28FFA8FFCFFFCFFFFFFFA87D767652FD08A8FFA8FFA8FF
%A8FFFF7DF8F852FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFA8FFA8FFA8FFA8FFFD08A87D7C767D7DFFCFFFFFFFCFFFCFCFA8FD26
%FFCAFD08FFA87D514A7575A8A8FFA8FFA8FFA8FFA8FD06FF52F827A8FD21
%FFA8FFA8FFA8FFA8A07475517DA8FD07FFCFFD26FFCFCFCFFFCFFFCFFFCF
%CA7D7D4A514A75A7A8A8FFA8FFA8FFA8FFA8FFFFFFA8FFA8F8F852FD1AFF
%A8FFA8FFA8FFA8FFA8FFFD04A89E7B7475767DA8FFFFFFCFFFCFFFA7FD25
%FFCFCFFFCFFFFFFFCFFFA17D7D7574747BA8A8FFA8FFA8FFA8FD09FF52F8
%F8A8FD1EFFA8FFFFFFA8FFA8FFA8A59E7B74A17DA8CFFFFFFFCFFFFFCFCA
%FD24FFA7CFCFFFCFFFCFCFA77D7D847C7C7BFD06A8FFA8FFA8FFA8FFA8FD
%05FFF8F8F8FFFFFFA8FD0BFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FF
%A8FFA8FFA8A8A1A075FD047DCAA8FFCFFFCFFFCACAA8FD22FFCACFCFFFCF
%FFFFFFCAA87DA87DFD04A8FFA8FFA8FD0EFFA8F8F87DFD21FFA8FFA8FFA8
%FFFD04A87D7DA1CFCFFFCFFFCFFFA7FD23FFCAA7FFCFCFCFFFCFCA7D7D7D
%A87DFD04A8FFA8FFA8FFA8FFA8FFFFFFA8FD06FF52F8F8A8FD19FFA8FFFF
%FFA8FFA8FFA8FFFD06A87DA87D7DA7CFCFFFCFFFCFCFA7FD22FFC9CFCFFF
%CFFFCFCFA77D7DFD06A8FFA8FFA8FFA8FD0DFFA8F8F852FD1EFFA8FFFFFF
%A8FFA8FFFD04A87DA87DA8CAFFCFFFCFFFCFC9CFFD20FFA8C9FD06CFA7A7
%7D7D7DFD08A8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FF52F8F87DFD12FF
%A8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFD04A87DA87D7D7DC9A8FFFD
%04CFA7CFFD20FFCFC9FFCFFFCFFFCFCA7DA87DFD04A8FFA8FFA8FD13FF27
%F827FD21FFA8FFA8FFA8FFFD04A87DA7A7CFCFFFCFFFCFCEA7FD20FFA7FD
%07CFA17D7DA87DFD04A8FFA8FFA8FFA8FFA8FD0EFFA8F8F852FD19FFA8FF
%FFFFA8FFA8FFA8FFFD06A87DA87DA7A7FD05CFA7C9FD20FFC9C9FFFD04CF
%C9A77DA87DFD04A8FFA8FFA8FFA8FD12FF52F8F8A8FD1DFFA8FFFFFFA8FF
%FD06A87D84A1C9CFFFFD04CFA7FD1FFFCFA0FD05CFA7C97D7D7DA87DFD06
%A8FFA8FFA8FFA8FFA8FFFFFFA8FD09FFA8F8F827FD16FFA8FFFFFFA8FFA8
%FFA8FFA8FFA8FFFD04A87DA87DA1A6FD05CFA7C9A8FD1EFFCAC9FD06CFA6
%7D7DFD04A8FFA8FFA8FD17FF7DF8F87DFD20FFA8FFA8FFA8FFA8A87DA87D
%C9C9FFFD04CFA6CFFD1EFFC9A6CFCECFCFCFA7A7527D7DFD04A8FFA8CFA8
%FFA8FFA8FFFFFFA8FD0FFF27F8F8FD19FFA8FFFFFFA8FFA8FFA8FFFD04A8
%7D7D527DA0C9FD04CFCEC9A7FD1EFFA7C9FD05CFC97CFD057D7CA0A1FFA8
%FFA8FD16FFA8F8F852FD1DFFA8FFA8FFA8A7A0A0767D7D7D52A1C9FD05CF
%A6C9FD1EFFA6A6CFC9CFA7CFA67C527D7D514A747474A0FFA8FFA8FFA8FF
%A8FFFFFFA8FD0EFF52F8F8A8FD15FFA8FFFFFFA8FFA8FFA8FFA89F74744A
%744A7D595376C9CECFA7CFCEC9A0FD1EFFA0CECFCFCECFCFC87C7D7D764A
%757CA0749FA8FFA8FD18FF27F828FD1CFFA8FFA8A89E9F7BA04A75767D52
%A1C8CFCFCFCECFA6C8FD1EFFA0A6CFC9CFA7CFA07C527D514A4AA77B7474
%FD04A8FFA8FFA8FD13FF7DF8F87DFFFF76A8FD14FFA8FFA8A8A8A9A79F74
%A07D744A7C7D7D76C8C9CFA7CFCEC99FFD1EFF9FC9CECFCECFC9C87C7D7D
%764A757DA0749FA7FFA8FFA8FFA8FFA8FD13FF272675C94B76FD12FFA8FF
%A8FFA8FFA8FFA8CFA7A87DA05075767D537C9FCFCFCFC9CFA6A6FD1DFFA8
%A0A6CEA7CEA7CE9F7C527D4B4B4A7D757B7AA8A8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FD0AFFA87AC99F9FFD08FFA8FFFFFFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8A8A8A9A8754A75517D527D769FA7CFA7CEA7C99FFD1EFF9F
%C9CECFCECFC9C87C7D7D7C4A75759F759FA7FFA8FFA8FFFFFFA8FD13FFCA
%A5CAC89FCFFD12FFA8FFFFFFA8FFA8FFA8FFA8A87C7B74757684597C9FCF
%CECFC9CFA6A0FD1DFFCA9FA6CEA7CEC9CE9F7C537D7D764A75759F7AA8A8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA84B759F9F
%9F7ACAFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A7
%A67BA17C754A767D7D769FA7CFA7CEA7C89FFD1EFF9FC9C9CEA7CFC99F76
%7D7D7D7C7DA1A0749FA7FFA8FFA8FFA8FFFFFFA8FFFFFFA8FD0BFF7D4B76
%FFA0FD049FCFFD0AFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8A89E9F7CA14A
%75527D537C9FCEC9CEC9CEA69FFD1DFFCF9F9FCEA7C9A7CE9F7C527D514A
%4AA1757474FD04A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFF76
%4B7DFFFFFFFD049F7BCFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8A8A8A9A79F74A07C744A767D59759FA7CEA6CEA7A69FFD1EFF9FC8C9CE
%A7CFC9C8757D7D7D4A75757B74A6A8FFA8FFA8FFA8FD11FF4B75A8FD05FF
%A0FD049FFD11FFA8FFA8FFA8FFA8FF9F9F75754A757D7D53A09FCFC9CEC9
%CE9FC8FD1EFFA09FCEA7C9A7CE9F7C527D7D7D4B7575A0A8A9A8A8A8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA12076A8FFA8FFA8FFA9FFFD059F
%FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD06A87B9F7475767D7D7D
%75A6A7CEA6CEA79F9FFD1EFFA09FA7CEA7CEC9C875FD047DA87DFD04A8FF
%A8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FD04FF7D4AA1FD0AFFFD049FA0FD05
%FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8CFA8A87DA87DA87D7D539F9F
%CFC9C9A6CE9FA7FD1EFFC974C9A6C9A6CEA09F52FD047DA87DFD08A8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8514AA8FFFFA8FFA8FFA8FFA8FFA9CF9E9F7A
%9FA0FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A884A87DA87D7D
%527D75A6A7C9A6C9A69FA0FD1EFFA79FA6CEA6CEC9C99FFD047DA87DFD04
%A8FFA8FFA8FFA8FFA8FD09FFA84B51FD0EFFCFFD049FA6FD0BFFA8FFFFFF
%A8FFA8FFA8FFFD04A87DA87D7D769FA6CFC9C9A6C99FCAFD1EFFCF75A6A6
%C9A6CEA69F76FD047DA87DFD04A8FFA8A8A8FFA8FFA8FFA8FFA8FFFFFF76
%4B76FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFFFA77A9F9F9FA0FFA9FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFFD06A87DA87D7D527C75C9A7C9A6C9A09FA8FD
%1FFF9F9FC9A6C9C9CE9F7C7D7D7DA87DFD06A8FFA8FFA8FFA8FFA8FD05FF
%764BA1FD12FFC99E9F9F9FA7FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFD
%06A8FD047D75A0C9CEA6C9A6A675FD20FF7B9FA6A6A0C9A7A075FD047DA8
%7DA87DFD04A8FFA8FFA8FFA8FFA8FFFFA84A76A8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFAFA6749F9E9FA7FFA8FFA8FFA8FFA8FFA8FFA8FFFD
%06A87DA8FD047D52759FCEA6A6A0C87BA0FD20FFC999C8A6C9A6CEA69F7C
%7D7DA87DFD06A8FFA8FFA8FFA8FFA8FFFFA14AA1FD17FFC89E9F9E9FA8FD
%05FFA8FFFFFFA8FFA8FFA8FFFD04A87DA8FD047D75C9C9C9A6C9A69FA7FD
%20FFA79F9FA6A0C8A6C9757C537D7DA87DA87DFD04A8FFA8A8A8FFA8FFA8
%764AA7FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A69E
%9F7A9FA8FFA8FFA8FFA8FFA8FFA8FFFD06A87DA87D7D527D759FA6C9FD04
%A674CAFD21FF75A0A6C8A6C9C9A075FD047DFD08A8FFA8FFA8FFA8514BFF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8A69E9F9EA5CAFF
%A8FFFFFFA8FFA8FFA8FFFD06A87DA87D7D529F9FCEA6C8A6C89FA0FD22FF
%A074A6A0A6A0C9A07552FD047DA87EA87DFD06A8FF7D4B52FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA89F9E9F749FA8
%FFA8FFA8FFA8FFFD06A87DA8FD047D527674A6A6A69FA6A0997CFD22FFA8
%9FA0C8A6C8A6C9757C7D7D7DA87CA7FD05A8FFA9FF764B7DFD05FFA8FD19
%FFCA9F9E9F9EA6A8FFA8FFA8FFA8FFA8FFFD04A8A1A17DA87D7D759FA6C9
%A6C8A6A674CFFD23FF759FA0A69FC8A6A0747D7D7D517574A07EFD05A84B
%4BA1FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA79F9E9F9EA6A8FFA8A8A8FFFD06A87B9F74757C7D52759FC9
%A6A69FC87B9FFD24FFA774C8A6A6A0C9A69F757D7675749F9EFD05A84B76
%A8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFA79F9E9F9FFFA8FFA8FFA8FFFD04A8A79F749F747C597C75
%C9A6C89FC89F9FA1FD24FFA8757BA69FA6A0C99F75527D4A754A7B7DA87D
%A8A8A1A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA79F74A7A8A8A8FFFD06A87DA87B744A75527C
%6EA0A6A69FA69F9F74CFFD25FFA09F9FC89FC8A6C9757C7D7C4B757DFD06
%A8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FD0FFFA8FFFFFFA8FFFFFFA8CF
%A8FFA8FFA8FFA8FFFD04A884A77575767D759FA6C99FC89FC874A1FD26FF
%CA749F9FA59FC8A6A06E7C7D7D7DA87DA87DFD08A8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD0A
%A87DA8FD047D52759FC8A09F9FA69F75A8FD27FFA074C89FA59FC8A69F75
%FD047DA87DFD06A8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD06A87DA87D7D
%527575C8A6C89FA69F99A0FD28FFA87575A59F9F9FC89F7551FD047DA87D
%A87DFD08A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFFD08A87DA87DA8FD047D52766EA6A6A6FD049F4ACFFD
%29FFA0759FA59FC8A6C89F75767D7DA87DA87DFD04A8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8
%FFA8FFFD06A87DA87DA87D7D7D7C6FA0A6C89FC79FA574A1FD2BFF75FD04
%9FA5A0A6757552FD047DA87DFD08A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA9FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFD06A87DA87DA8FD047D527D
%4B7BA0C89F9F9FA57475A8FD2BFFA76EFD049FC8A6C875757D7D7DA87DA8
%7DFD08A8FFA8FFA8FFA8FFA8FFA8FFA8FFAFCAA6C9A7FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFFD06A87DA87DA8FD047D4B75A6C89FA59FA59F75A7FD2D
%FF7C4A9F9E9F7AA69FA04A7552FD067DA87DA87DFD08A8FFA8A8A8FFA8A8
%A8A79E9E749FA0FFA8FFA8A8A8FFFD0AA87DA87DA8FD047D527D4B759FC8
%9F9F7A9F9E7575FD2EFFCA7575A59FA59FC8A6A66F767D7D7DA87DA87DFD
%06A8FFA8FFA8FFA8FFA8FFA8FFA8CF9E9FA0A69E9FA7FFA8FFA8FFA8FFA8
%FFFD0AA87DA8FD047D75759FC89F9F9FA59F9F75FD30FFA175749F9E9F9F
%A69FA04A7552FD047DA87DA87DFD0CA8FFA8AFA09F74A7A79F7BA7A8FFFD
%0AA87EA87EA87DA8FD067D4B759FA69F9F9E9F9E9F4AA7FD31FF7C759F9F
%9E9F9FA6A5A06F7652FD047DA87DA09FA7FD07A8FFA8A8A8FFA8A7749FA0
%A77CA8A8CFA8FFFD0AA8A0A07CA87DA8FD047D51759FC89F9F9E9F9E9F4A
%A1FD33FF7575749F749F9EA59F9F4A5152FD047D7C747474A77EA87DFD08
%A8A97C747475747475FD07A87DA8A8A87DA87C9E7474757D7D7D597D4B75
%7BA69F9F749F7A9F4A76FD35FF75759EFD049FC8A5A66F75767D7DA87575
%749F7CFD0AA8FFA8A774757BA07475A1AFFD0BA8A0749F7476FD047D4B75
%9FC89F9F9E9F9E9F6E76FD37FF4B75749F7A9E74A59F9F756F517D7D764A
%6E4AA17DA87DA87DA87DFD05A87C744AA17C744AA1A8A87DA8A8A87DA87D
%A87DA87C754A75527D52764A759FC89F9F749F9E9F4A75A8FD38FF757574
%9F9E9F7AA59FC875754B7D7D7D527D7DA87DA87DA8A8A87DFD04A8A15075
%7CA14A757CA8A8A87DA8A8A87DA87DA87DA87C76527D76754A9F9FC89F9F
%9E9F9E9F6E75A8FD3AFF4B6E749F749E749F9FA57B754A5252FD087DA87D
%A87DA87DA876754A7C764A4A7D7DA87DA87DA8FD087D597D4B4B4A9F9FA5
%9E9E749F749F4A75A8FD3CFF7575749F749F9E9F9FC89F9F4B7552FD067D
%A87DA87DA87DA87DA84B754B754A757DA87DA87DA87DA87DA8FD057D764B
%7575C79FA59F9F749F9E9F4A76CAFD3EFF756F749E749F749E7AA59F9F74
%6F4B5252FD0D7D4B4B4A51767EFD0A7D597C4B4B4A759FA59F9F749F749E
%74754A76A8FD40FF766F749F749F749F749F9FC79F9F4B4B4B76FD0F7DA8
%FD0A7D52764B6F759F9FA59F9F749F749F74754AA1FD43FF7D4B4A74749E
%7474749F9E9F9F9F75754A4B4B52527D527D59FD077D597D7D7D527D5276
%4B524B4B4AFD059F7474749E749E746F4AA1FD45FFA8764A75749F749F74
%9F749F9FC79F9F75754A6F4B524B76527D527D7D7D527D767652764B4B4B
%6F759F9FC79FA59F9F749F749F749F746F76FD49FFA14A6F7474749E7474
%749F7A9F9EA59F9F74756E6F4A4B4B4B4A4B4B4B4A4B4A4B4A75749F9EA5
%9F9F9E9F7474749E747474754A4B7DFD4BFFCF764B4A75749F749E749F74
%9F7A9F9FA59FC7FD049F7B9F749F759F74FD049FC79F9F9E9F749E749F74
%9E749F746F4A7CA8FD42FFA8FFFFFFA8FFA8FFA8FFAFFF7D764A4A4AFD0A
%749E749F9E9F9E9F9E9F9E9F9E9F7A9F7A9F749EFD0A744A4B4BA7A8FFA8
%FFA8FFA8FFA8FD42FFA8FFA8FFA8FFA8A8516F4A75749F749E749F747474
%9F749E749F749F749F749F749F749E749F7498749F749E7499746F4B76A1
%FFAFFFA8FFA8FFFFFFA8FD38FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFD06A8
%7D764B4B4A75FD1C744A4A444B52A1A8FFA8A8A8FFA8A8A8FFA8FFA8FFA8
%FFA8FFFFFFA8FD30FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFD08A87C764B4B
%4A756E757474749E747474987474749874747498747474754A4B4A4B4B7D
%7DFD08A8FFA8FFA8FFA8FFA8FFA8FFA8FD2CFFA8FFA8FFA8FFA8FFA8FFFD
%0EA87DA87DA87DA87D7D52764B4B444B4A4A4A744A744A746E744A744A6E
%4A4B444B444B4B7D7DA87EA87DA87DA87DFD0CA8FFA8FFA8FFA8FFA8FD2E
%FFA8FFA8FFA8FFA8FFA8FFFD0AA87DA87DA87DA8A8A87D7D76764B76FD0B
%4B76527776A87DA884A87DA87DFD0CA8FFA8FFA8FFA8FFA8FD30FFA8FFA8
%FFA8FFA8A8A8FFFD0AA87DA87DA87DA87DA87DA87DA87DA87DA87DA17D7D
%767D76FD047DA17DA87DA87DA87DA87DA87DA87DA87DA87DFD0CA8FFA8FF
%A8FFA8FFA8FD30FFA8FFA8FFA8FFA8FFA8FFFD0AA87DA8A8A87DA87DA87D
%A87DA87DA884A87DA884A87DA87DA87DA87DA87DA87DA87DFD0CA8FFA8FF
%A8FFA8FFA8FFFFFFA8FD2CFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFD0AA87D
%A8A8A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DFD0CA8FFA8A8A8FFA8FFA8FFA8FFA8FD36FFA8FFFFFFA8FF
%A8FFA8FFA8FFA8FFA8A8A8FFFD1FA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FF
%A8FD40FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFD1BA8FFA8A8A8FF
%A8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FD48FFA8FFFFFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%FFFFA8FD54FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FDFCFFFDFCFFFDFCFF
%FDFCFFFDFCFFFDFCFFFD40FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
10 Bn
%AI5_BeginGradient: (New Gradient)
(New Gradient) 0 5 Bd
[
<
31323334353536373838393A3B3B3C3D3D3E3D3E3F3F40414142424344444545464647474849494A
4A4B4B4C4C4D4D4D4E4E4E4F4F504F4F505051515152525253535354545454555555565656565757
57585858585959595A5A59595A5A5B5B5B5C5C5C5D5D5D5D5E5E5F5F60
>
<
65666768696A6B6C6D6E6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8A
8B8C8D8E8F9091929394959697989A9D9D9E9FA1A2A2A3A4A5A7A8A9AAAAABACADAEAFB0B1B1B3B4
B4B5B6B7B8B9BABBBCBDBFC0C1C2C3C3C4C5C6C7C8C9CACBCCCCCDCECF
>
<
F9F9F8F8F8F7F7F8FAFAFBFBFCFCFDFDFDFDFDFDFCFCFBFAFCFBFBFAFAF9F9F9F9F9F9FAFAFAFAFB
FBFAFAF9F8F7F7F6F5F4F3F2F3F2F2F4F3F3F2F2F1F0EFEEECEBE9E9E8E8EAEAE9E9E7E6E4E3E1DF
DEDDDDDCDBDCDAD9D8D7D6D4D3D2D0CFCECCCBC9C7C8C6C5C4C2C1C0BF
>
<
0304040405050606070707080809090A0B0C0C0D0D0E0F1011111213141516171718191A1B1C1D1E
1F2021222425262728292A2C2D2E2E30313234353637393A3B3D3E3F414243454647494A4B4D4E50
5153545557585A5B5D5E5F606263656667696A6C6D6F71727475767879
>
<
CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9
A8A7A6A5A4A3A2A1A09F9E9D9C9B9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A79787877767574737271706F6E6D6C6B6A69686766
>
<
9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473
7271706F6E6D6C6B6A6968676665646261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A
494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D
>
<
30303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2D
2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2929292929292929
>
4 %_Br
<
00000000000000010101010202020101020202020303030304040404040505050506060606070707
0809090909090A0A0A0A0B0B0B0B0C0C0C0B0C0D0D0C0D0E0E0E0E0F0F0F0F0F1010101011111111
1212121212131313131414141415151515151616161617171717191919191A1A1A1A1A1C1C1C1C1D
1D1D1C1E1E1E1E1E1F1F1F1F20202020212121212122222222242424242525252525262626262727
27272828282727292929282A2929292A2A2A2A2B2B2B2B2B2C2C2C2C2D2D2D2D2E2E2D2E2E2F2F2F
2F30303030313131
>
<
0000000000000101020203020303040404040505060607070707080809090A0A0B0A0C0C0D0C0E0E
0F0E0E101011101111131213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F202021
2122222223222424252426262726282829292A2A2B2B2C2C2D2D2E2E2F2F30303232333334343635
363638373838383A393A3A3C3B3C3C3E3D3E3E4040414142424343444445454646474748484A494B
4A4C4B4D4D4E4E4D4F4F5050515152525353545455555757585859595A5A5B5B5C5C5E5D5F5F6060
6261636364646565
>
<
000000010203030405060708090A0A0C0D0E0E101112121414161718191A1B1C1D1F202122232426
27292A2B2C2D2E2F31313334353638393A3B3C3D3F4041424344454648494A4B4D4E4F5052525454
5657585A5B5C5D5F60616264646667696A6B6C6D6E6F707273757678797A7C7D7E80818283858688
898A8B8D8E909293959597989A9B9C9D9FA0A1A2A4A5A6A7A9AAABACAEAFB0B1B3B4B5B6B8B9BABB
BDBEBFC0C2C3C4C6C7C8C9CACBCDCECFD0D1D2D3D4D5D6D7D8D9DADBDDDEDFE0E1E3E5E7E8EAEBED
EFF1F2F4F5F6F7F9
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000101010101010101010101010101010101010101010101010202020202020202
0203030303030303
>
<
FFFFFFFEFEFEFEFDFDFDFDFCFCFCFCFCFBFBFBFBFAFAFAFAF9F9F9F9F9F8F8F8F8F7F7F7F7F6F6F6
F6F5F5F5F5F5F4F4F4F4F3F3F3F3F2F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEFEEEEEEEEEDEDEDED
ECECECECECEBEBEBEBEAEAEAEAE9E9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E5E4E4E4E4E3
E3E3E3E2E2E2E2E2E1E1E1E1E0E0E0E0DFDFDFDFDFDEDEDEDEDDDDDDDDDCDCDCDCDCDBDBDBDBDADA
DADAD9D9D9D9D9D8D8D8D8D7D7D7D7D6D6D6D6D5D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D2D1D1D1
D1D0D0D0D0CFCFCF
>
<
FFFFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECEC
EBEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8
D8D7D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5
C4C4C3C3C2C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1
B1B0B0AFAFAEAEAEADADACACABABAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E
9D9D9C9C9B9B9A9A
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
3736353433323130
>
4 %_Br
<
36363635353535343434343332333333323232323131313131303030302F2F2F2F2E2E2E2E2E2D2D
2D2D2C2C2C2C2B2B2B2B2B2A2A2A2A29292929292828282827272727262626262625252525232323
2322222222222121212120202020201F1F1F1F1E1E1D1D1C1C1C1C1C1A1A1B1A1919191918181818
1817171717161616161515151515141414141313131313121212121111111110101010100F0E0F0F
0E0D0D0E0C0C0C0C0C0B0B0B0B0A0A0A0A0A09090908070707070606060606050505050404040403
030303030202020201020202020101010100000000000000
>
<
5D5D5C5C5A5A5959595858575755555454545353525251515150504F4F4E4E4E4C4D4B4C4A4A4949
494849474746464645454444434343424241413F403E3F3F3E3E3C3C3B3C3C3A3A39393838393737
36373535343434333331323131312F302F2F2D2E2E2C2D2B2B2A2A28292928282727262627252524
242323222223212120211F1F201E1F1D1E1C1D1D1C1C1A1B1A1A1819191818171716161615161414
1314141213121211111010100F100E0E0D0D0E0C0D0B0C0A0A0B0A0A090908080707080707060605
050605050404030304030302020202010101000000000000
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFEFDFCFBF9F8F7F5F4F3F2F0EFEEEDECEBE9E8E7E6E4E3E1E0DEDDDB
DAD8D7D6D4D3D2D1D0CECDCCCBCAC9C8C7C7C6C5C3C2C1C0BFBDBCBBBAB9B7B6B5B4B2B1B0AEADAC
ABA9A8A7A6A4A3A2A09F9E9D9B9A999796959492908F8E8C8B89888785838281807E7D7C7A797877
76757372706F6E6C6B6A69676665636361605F5D5C5B5A58585655545252504F4E4D4C4A49484746
454342413F3F3D3D3B3A39373635343232302E2E2C2B2A29272624232221201E1E1C1B1A19181716
14131311100F0E0D0C0B0A09080706050403030201000000
>
<
03030302020202020202020202020202020202020101010101010101010101010101010101010000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
>
<
CCCCCCCDCDCDCDCECECECECFCFCFCFCFD0D0D0D0D1D1D1D1D1D2D2D2D2D3D3D3D3D4D4D4D4D4D5D5
D5D5D6D6D6D6D7D7D7D7D7D8D8D8D8D9D9D9D9D9DADADADADBDBDBDBDCDCDCDCDCDDDDDDDDDEDEDE
DEDFDFDFDFDFE0E0E0E0E1E1E1E1E1E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5E5E5E6E6E6E6E7E7E7E7
E7E8E8E8E8E9E9E9E9EAEAEAEAEAEBEBEBEBECECECECECEDEDEDEDEEEEEEEEEFEFEFEFEFF0F0F0F0
F1F1F1F1F2F2F2F2F2F3F3F3F3F4F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F8F8F9F9F9F9FA
FAFAFAFAFBFBFBFBFCFCFCFCFCFDFDFDFDFEFEFEFEFFFFFF
>
<
9E9E9F9FA0A0A1A1A1A2A2A3A3A4A4A5A5A5A6A6A7A7A8A8A8A9A9AAAAABABABACACADADAEAEAFAF
AFB0B0B1B1B2B2B2B3B3B4B4B5B5B5B6B6B7B7B8B8B9B9B9BABABBBBBCBCBCBDBDBEBEBFBFBFC0C0
C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9C9CACACBCBCCCCCDCDCDCECECFCFD0D0D0D1D1D2
D2D3D3D4D4D4D5D5D6D6D7D7D7D8D8D9D9DADADADBDBDCDCDDDDDEDEDEDFDFE0E0E1E1E1E2E2E3E3
E4E4E4E5E5E6E6E7E7E8E8E8E9E9EAEAEBEBEBECECEDEDEEEEEEEFEFF0F0F1F1F2F2F2F3F3F4F4F5
F5F5F6F6F7F7F8F8F8F9F9FAFAFBFBFCFCFCFDFDFEFEFFFF
>
<
202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647
48494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091929394959697
98999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF
C0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7
E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
<
666565656464646464636363636363626262626262616161616060605F5F5F5F5F5F5E5E5E5E5D5D
5D5C5C5C5C5B5B5A5A5959595856565555545454535352525151504F4F4E4E4D4D4C4C4B4A4A4949
48474746464544444343424140403F3E3D3D3C3B3A3938383736
>
<
BBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A2A1A09F9E9D9C9B9A99989796
959494939291908F8E8D8C8B8A8C8B8A89888786858584838281807F7E7D7C7B7A79797877767574
73727170706F6E6D6C6B6A6A69686766656463626161605F5E5D
>
<
DCDEDFE0E1E2E4E7E9EBEDEEF0F0F1F1F1F2F4F6F7F9FBFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
7C7A7977757472706F6D6B6A6866656362605E5D5B5A585755545351504E4D4B4A48474544434140
3F3D3C3A39383635343331302F2E2D2B2A2928272625232221201F1E1D1C1B1A1918171615141413
121110100F0E0D0C0C0B0A0A0909080807060605050404040303
>
<
62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878889
8A8B8C8D8E8F9091929394959698999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2
B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCC
>
<
363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D
5E5F606162636465666768696A6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081828384
85868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E
>
0.12549
4 %_Br
[
0.375189 0.813169 0.747524 0.475776 0.4 0.176471 0.160784 2 50 100 %_BS
%_0.375189 0.813169 0.747524 0.475776 0.4 0.176471 0.160784 2 50 100 Bs
0.192508 0.396094 0.975189 0.013214 0.811765 0.603922 0.188235 2 50 52 %_BS
%_0.192508 0.396094 0.975189 0.013214 0.811765 0.603922 0.188235 2 50 52 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 24 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 24 Bs
0.212497 0.364111 1 0.011505 0.8 0.619608 0.12549 2 50 12 %_BS
%_0.212497 0.364111 1 0.011505 0.8 0.619608 0.12549 2 50 12 Bs
0.398199 0.731441 0.862516 0.48716 0.384314 0.211765 0.12549 2 50 0 %_BS
%_0.398199 0.731441 0.862516 0.48716 0.384314 0.211765 0.12549 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient 3)
(New Gradient 3) 0 6 Bd
[
<
393A3B3B3C3C3D3E3F3E3F40414242424243444445444546464748474848494A4A4A4A4B4B4C4C4C
4C4D4D4E4E4E4E4F4F4F504F5050
>
<
6161626465656667686A6A6B6C6D6E6F70717273737576777878797C7D7E7F808182838485868789
8A8B8C8D8E8F9091929394959697
>
1
<
04050505060707080808090A0A0B0C0C0D0D0E0F1010111213131415161718191A1A1B1C1D1E1F1F
2022232425252628292A2B2C2D2E
>
<
C8C7C6C6C5C4C3C2C1C1C0BFBEBDBCBCBBBAB9B8B7B7B6B5B4B3B2B2B1B0AFAEADADACABAAA9A8A8
A7A6A5A4A3A3A2A1A09F9E9E9D9C
>
<
9A999897969594939291908F8E8D8C8B8A898887868584838281807E7D7C7B7A7978777675747372
71706F6E6D6C6B6A696867666564
>
<
201F1F1E1E1D1C1C1B1B1A19191818171616151514131312121110100F0E0E0D0D0C0B0B0A0A0908
0807070605050404030202010100
>
4 %_Br
<
0505060606070606060707070808080909090A0A0A0B0B0B0B0C0C0C0D0D0D0E0E0E0F0F0F0F1010
1011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1C
1D1D1D1E1E1E20202021212122222222232323252524262626272727272828282929292A2A2A2B2B
2B2D2C2C2C2D2D2D2E2E2E2F2F2E302F302F30303032323233333334343333343434353535363636
373737383838383939383A39
>
<
0000000000000000000000000000000000000000010001020203030405040605060607080809090A
0B0A0C0C0D0E0E0F0F10111112121212131414151516181718181A1B1B1C1B1D1E1D1F1F20202122
22232324262627272829292B2A2C2D2D2E2E2F2F303231333334353536363739383A3A3B3C3C3D3D
3E3E3F41414242434444454546484748484A4B4B4C4C4D4D4E4F4F50505153525353545656575759
5A5A5B5B5C5C5D5E5E605F61
>
<
3E3F414243454647494A4C4D4E4F515253545557585A5B5C5D5F61626364656667696A6A6B6C6E6F
6F71727374757778797A7B7D7E7F8082838485868788898B8C8D8E8F91929394959798999A9C9D9D
9FA0A1A3A4A5A7A8A9ABACADAFB0B1B2B3B5B6B7B8B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C8C9CBCC
CDCECFD0D1D2D4D5D6D8D9DBDCDEDFE0E2E3E5E6E7E9EAEBECEDEEF0F1F2F3F5F5F7F8F9FAFCFDFE
FFFFFFFFFFFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000001010101010101010101010101010202020202020202020202
030303030303040404040404
>
<
FDFDFCFCFCFBFBFBFBFAFAFAF9F9F9F8F8F8F7F7F7F6F6F6F6F5F5F5F4F4F4F3F3F3F2F2F2F2F1F1
F1F0F0F0EFEFEFEEEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E9E8E8E8E7E7E7E6E6E6E5E5E5E5
E4E4E4E3E3E3E2E2E2E1E1E1E0E0E0E0DFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D8D8
D8D7D7D7D7D6D6D6D5D5D5D4D4D4D3D3D3D3D2D2D2D1D1D1D0D0D0CFCFCFCFCECECECDCDCDCCCCCC
CBCBCBCACACACAC9C9C9C8C8
>
<
FFFEFEFDFDFCFBFBFAFAF9F9F8F7F7F6F6F5F4F4F3F3F2F1F1F0F0EFEEEEEDEDECECEBEAEAE9E9E8
E7E7E6E6E5E4E4E3E3E2E1E1E0E0DFDFDEDDDDDCDCDBDADAD9D9D8D7D7D6D6D5D4D4D3D3D2D2D1D0
D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C0C0BFBFBEBDBDBCBCBBBABAB9B9
B8B8B7B6B6B5B5B4B3B3B2B2B1B0B0AFAFAEADADACACABABAAA9A9A8A8A7A6A6A5A5A4A3A3A2A2A1
A0A09F9F9E9E9D9C9C9B9B9A
>
<
CBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4
A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C
7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554
535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C
2B2A29282726252423222120
>
4 %_Br
<
00000000000000000000000000010101010101020202020202020203030303030303030303030404
040405050505050505050505
>
0.000031
<
00000102020304050608090A0B0C0D0F10111214151617191A1B1E1F212223252627292A2B2C2D2E
30313334353738393A3B3D3E
>
0.000031
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFD
FDFDFDFDFDFDFDFDFDFDFDFD
>
1
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCB
>
4 %_Br
<
05050505050505050505040404040303030303030303030303020202020202020201010101010100
000000000000000000000000
>
0.000031
<
3E3D3B3A39383735343331302E2D2C2B2A292726252322211F1E1B1A19171615141211100F0D0C0B
0A0908060504030202010000
>
0.000031
<
FDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF
FFFFFFFFFFFFFFFFFFFFFFFF
>
1
<
CBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E6E7E8E9EAEBECEDEEEFF0F1F2F3
F4F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
<
2B2B2B2A2A2A2A2B292A2A2A2A282829292928282828282727272727262626262625252525252524
24242424232323232322222222222121212122202120212120202020201F1F1F1F1F1E1E1E1E1E1C
1C1C1D1D1B1C1B1C1C1A1A1A1A1B1919191919181818181818171717171716161616161515151515
141414141413131313131212121212111111111110101010100F0F0F0F0F0E0E0E0E0E0D0D0D0D0D
0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090908080808080707070707060607060706060606
06050505
>
<
6B696A69696767656664646262616160605E5F5E5E5C5C5C5C5A5A59595858565655555454535352
52504F4F4E4E4D4D4B4C4A4B494948484747454645454343424241413F403E3F3D3D3C3C3B3B393A
3939373637353534343333313130302F2F2D2D2C2C2B2B2929282827272526252523232222212120
201F1E1E1C1D1B1C1A1A191A1818171816161515141413131213111110100F100E0E0D0E0C0C0B0B
0A0A0908080707060605050404030302030202010101010000000000000000000000000000000000
00000000
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE
FDFCFBFAF8F7F6F5F3F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDCDBDAD9D7D6D5D4D3D2D1
D0CFCECDCBCBC9C9C8C6C5C4C3C2C0BFBEBDBBBAB9B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5
A3A2A1A09F9E9D9B9A99989695949391908F8E8D8C8A8988878685838281807F7E7C7C7A79787776
75737271706F6D6C6B6A69676665646261605F5D5C5B5A585756545352514F4E4D4B4A4947464543
42413F3E
>
<
02020202020202020202020202010101010101010101010101010101010101010101010101010101
01010000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000
>
<
D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDCDCDD
DDDDDDDDDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E4E4E4E4E4E5
E5E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECEC
EDEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F2F3F3F3F3F3F4F4F4F4F4
F5F5F5F5F5F6F6F6F6F6F6F7F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFC
FCFDFDFD
>
<
97989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAB
ABACADADAEAEAFAFB0B0B1B1B2B2B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBDBDBEBEBFBF
C0C0C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0D1D1D2D2D3D3D4
D4D5D6D6D7D7D8D8D9D9DADADBDBDCDCDDDDDEDEDFDFE0E0E1E1E2E2E3E3E4E4E5E5E6E6E7E7E8E8
E9E9EAEBEBECECEDEDEEEEEFEFF0F0F1F1F2F2F3F3F4F4F5F5F6F6F7F7F8F8F9F9FAFAFBFBFCFCFD
FDFEFEFF
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACB
>
4 %_Br
[
0.314244 0.593133 1 0.179934 0.611765 0.392157 0 2 50 100 %_BS
%_0.314244 0.593133 1 0.179934 0.611765 0.392157 0 2 50 100 Bs
0.224552 0.378515 1 0.017639 0.784314 0.603922 0.12549 2 50 81 %_BS
%_0.224552 0.378515 1 0.017639 0.784314 0.603922 0.12549 2 50 81 Bs
0.019898 0.000031 0.243046 0.000031 0.992157 1 0.796078 2 50 41 %_BS
%_0.019898 0.000031 0.243046 0.000031 0.992157 1 0.796078 2 50 41 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 25 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 25 Bs
0.019898 0.000031 0.243046 0.000031 0.992157 1 0.796078 2 50 12 %_BS
%_0.019898 0.000031 0.243046 0.000031 0.992157 1 0.796078 2 50 12 Bs
0.167483 0.419074 1 0.009613 0.835294 0.592157 0 2 50 0 %_BS
%_0.167483 0.419074 1 0.009613 0.835294 0.592157 0 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 11)
(Unnamed gradient 11) 0 5 Bd
[
<
0505060606070606060707070808080909090A0A0A0B0B0B0B0C0C0C0D0D0D0E0E0E0F0F0F0F1010
1011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1C
1D1D1D1E1E1E20202021212122222222232323252524262626272727272828282929292A2A2A2B2B
2B2D2C2C2C2D2D2D2E2E2E2F2F2E302F302F30303032323233333334343333343434353535363636
373737383838383939383A39
>
<
0000000000000000000000000000000000000000010001020203030405040605060607080809090A
0B0A0C0C0D0E0E0F0F10111112121212131414151516181718181A1B1B1C1B1D1E1D1F1F20202122
22232324262627272829292B2A2C2D2D2E2E2F2F303231333334353536363739383A3A3B3C3C3D3D
3E3E3F41414242434444454546484748484A4B4B4C4C4D4D4E4F4F50505153525353545656575759
5A5A5B5B5C5C5D5E5E605F61
>
<
3E3F414243454647494A4C4D4E4F515253545557585A5B5C5D5F61626364656667696A6A6B6C6E6F
6F71727374757778797A7B7D7E7F8082838485868788898B8C8D8E8F91929394959798999A9C9D9D
9FA0A1A3A4A5A7A8A9ABACADAFB0B1B2B3B5B6B7B8B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C8C9CBCC
CDCECFD0D1D2D4D5D6D8D9DBDCDEDFE0E2E3E5E6E7E9EAEBECEDEEF0F1F2F3F5F5F7F8F9FAFCFDFE
FFFFFFFFFFFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000001010101010101010101010101010202020202020202020202
030303030303040404040404
>
<
FDFDFCFCFCFBFBFBFBFAFAFAF9F9F9F8F8F8F7F7F7F6F6F6F6F5F5F5F4F4F4F3F3F3F2F2F2F2F1F1
F1F0F0F0EFEFEFEEEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E9E8E8E8E7E7E7E6E6E6E5E5E5E5
E4E4E4E3E3E3E2E2E2E1E1E1E0E0E0E0DFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D8D8
D8D7D7D7D7D6D6D6D5D5D5D4D4D4D3D3D3D3D2D2D2D1D1D1D0D0D0CFCFCFCFCECECECDCDCDCCCCCC
CBCBCBCACACACAC9C9C9C8C8
>
<
FFFEFEFDFDFCFBFBFAFAF9F9F8F7F7F6F6F5F4F4F3F3F2F1F1F0F0EFEEEEEDEDECECEBEAEAE9E9E8
E7E7E6E6E5E4E4E3E3E2E1E1E0E0DFDFDEDDDDDCDCDBDADAD9D9D8D7D7D6D6D5D4D4D3D3D2D2D1D0
D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C0C0BFBFBEBDBDBCBCBBBABAB9B9
B8B8B7B6B6B5B5B4B3B3B2B2B1B0B0AFAFAEADADACACABABAAA9A9A8A8A7A6A6A5A5A4A3A3A2A2A1
A0A09F9F9E9E9D9C9C9B9B9A
>
<
CBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4
A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C
7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554
535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C
2B2A29282726252423222120
>
4 %_Br
<
00000000000000000000000000010101010101020202020202020203030303030303030303030404
040405050505050505050505
>
0.000031
<
00000102020304050608090A0B0C0D0F10111214151617191A1B1E1F212223252627292A2B2C2D2E
30313334353738393A3B3D3E
>
0.000031
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFD
FDFDFDFDFDFDFDFDFDFDFDFD
>
1
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCB
>
4 %_Br
<
05050505050505050505040404040303030303030303030303020202020202020201010101010100
000000000000000000000000
>
0.000031
<
3E3D3B3A39383735343331302E2D2C2B2A292726252322211F1E1B1A19171615141211100F0D0C0B
0A0908060504030202010000
>
0.000031
<
FDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF
FFFFFFFFFFFFFFFFFFFFFFFF
>
1
<
CBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E6E7E8E9EAEBECEDEEEFF0F1F2F3
F4F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
<
37373535363434343334343333333232323131313030302F2F2F2E2E2E2D2D2E2C2D2D2B2C2C2A2B
2B292A2A2929292728272626262525252424242323232222222121201F1F1F1E1E1E1D1D1C1C1C1B
1B1B1A1A1A1919191718171616161515151414151414141313131212121111111010100F0F0F0E0E
0E0D0D0D0C0C0C0B0B0B0A0A0A0909090808080707070606070606060505
>
<
5A585957565655555453535250504F4E4E4D4D4C4B4B4A49494847474546454344424141403E3F3D
3C3D3B3B3A393938363736343433333231312F2F2F2D2C2C2B2B2A28292726262523242223222021
201E1F1D1C1D1B1B1B191918171716151514141312121110100F0E0E0D0D0C0B0B0A090908070806
050605050403030201020100000000000000000000000000000000000000
>
<
F2F0EEEDECEAE9E7E6E5E3E1E0DFDDDCDBDAD9D8D6D5D5D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3
C2C1C0BEBDBCBBBAB9B7B6B5B4B2B1B0AEADACABAAA8A7A6A5A3A2A19F9E9D9B9A99989795949392
91908E8D8C8B8A88878685848381807F7E7D7B7A7978777674737271706F6E6D6C6B6A6968676665
646261605F5E5C5B59585755545352514F4E4D4C4A494746454342413F3E
>
<
03020202020202020202020201010101010101010101010101000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
>
<
CBCBCCCCCCCDCDCDCECECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D5D5D5D6D6D6D7D7D7D8D8
D8D9D9D9DADADADBDBDBDCDCDCDDDDDDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E4E4E5E5E5E6
E6E6E7E7E7E8E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3
F3F4F4F4F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9FAFAFAFBFBFBFCFCFCFDFD
>
<
A0A1A1A2A3A3A4A4A5A6A6A7A8A8A9AAAAABABACADADAEAFAFB0B1B1B2B2B3B4B4B5B6B6B7B8B8B9
BABABBBBBCBDBDBEBFBFC0C1C1C2C2C3C4C4C5C6C6C7C8C8C9C9CACBCBCCCDCDCECFCFD0D0D1D2D2
D3D4D4D5D6D6D7D7D8D9D9DADBDBDCDDDDDEDEDFE0E0E1E2E2E3E4E4E5E5E6E7E7E8E9E9EAEBEBEC
EDEDEEEEEFF0F0F1F2F2F3F4F4F5F5F6F7F7F8F9F9FAFBFBFCFCFDFEFEFF
>
<
363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D
5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485
868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACAD
AEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACB
>
4 %_Br
[
0.224552 0.378515 1 0.017639 0.784314 0.603922 0.12549 2 50 100 %_BS
%_0.224552 0.378515 1 0.017639 0.784314 0.603922 0.12549 2 50 100 Bs
0.019898 0.000031 0.243046 0.000031 0.992157 1 0.796078 2 50 41 %_BS
%_0.019898 0.000031 0.243046 0.000031 0.992157 1 0.796078 2 50 41 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 25 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 25 Bs
0.019898 0.000031 0.243046 0.000031 0.992157 1 0.796078 2 50 12 %_BS
%_0.019898 0.000031 0.243046 0.000031 0.992157 1 0.796078 2 50 12 Bs
0.21384 0.353735 0.948669 0.010163 0.796078 0.627451 0.211765 2 50 0 %_BS
%_0.21384 0.353735 0.948669 0.010163 0.796078 0.627451 0.211765 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 14)
(Unnamed gradient 14) 0 2 Bd
[
<
666565656464646464636363636363626262626262616161616060605F5F5F5F5F5F5E5E5E5E5D5D
5D5C5C5C5C5B5B5A5A5959595856565555545454535352525151504F4F4E4E4D4D4C4C4B4A4A4949
48474746464544444343424140403F3E3D3D3C3B3A3938383736
>
<
BBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A2A1A09F9E9D9C9B9A99989796
959494939291908F8E8D8C8B8A8C8B8A89888786858584838281807F7E7D7C7B7A79797877767574
73727170706F6E6D6C6B6A6A69686766656463626161605F5E5D
>
<
DCDEDFE0E1E2E4E7E9EBEDEEF0F0F1F1F1F2F4F6F7F9FBFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
7C7A7977757472706F6D6B6A6866656362605E5D5B5A585755545351504E4D4B4A48474544434140
3F3D3C3A39383635343331302F2E2D2B2A2928272625232221201F1E1D1C1B1A1918171615141413
121110100F0E0D0C0C0B0A0A0909080807060605050404040303
>
<
62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878889
8A8B8C8D8E8F9091929394959698999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2
B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCC
>
<
363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D
5E5F606162636465666768696A6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081828384
85868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E
>
0.12549
4 %_Br
[
0.212497 0.364111 1 0.011505 0.8 0.619608 0.12549 2 50 100 %_BS
%_0.212497 0.364111 1 0.011505 0.8 0.619608 0.12549 2 50 100 Bs
0.398199 0.731441 0.862516 0.48716 0.384314 0.211765 0.12549 2 50 0 %_BS
%_0.398199 0.731441 0.862516 0.48716 0.384314 0.211765 0.12549 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 15)
(Unnamed gradient 15) 0 2 Bd
[
<
36373838393A3B3C3D3D3E3F404041424343444445464647474849494A4A4B4C4C4D4D4E4E4F4F50
51515252535354545455555656585959595A5A5B5B5C5C5C5C5D5D5D5E5E5E5E5F5F5F5F5F5F6060
6061616161626262626262636363636363646464646465656566
>
<
5D5E5F60616162636465666768696A6A6B6C6D6E6F7070717273747576777879797A7B7C7D7E7F80
818283848585868788898A8B8C8A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A2
A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABB
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFEFDFBF9F7F6F4F2F1F1F1F0F0EEEDEBE9E7E4E2E1E0DFDEDC
>
<
03030404040505060607080809090A0A0B0C0C0D0E0F1010111213141415161718191A1B1C1D1E1F
2021222325262728292A2B2D2E2F30313334353638393A3C3D3F404143444547484A4B4D4E505153
545557585A5B5D5E6062636566686A6B6D6F7072747577797A7C
>
<
CCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5
A4A3A2A1A09F9E9D9C9B9A9998969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C
7B7A797877767574737271706F6E6D6C6B6A6968676665646362
>
<
9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877
767574737271706F6E6D6C6B6A6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736
>
0.12549
4 %_Br
[
0.398199 0.731441 0.862516 0.48716 0.384314 0.211765 0.12549 2 50 100 %_BS
%_0.398199 0.731441 0.862516 0.48716 0.384314 0.211765 0.12549 2 50 100 Bs
0.212497 0.364111 1 0.011505 0.8 0.619608 0.12549 2 50 0 %_BS
%_0.212497 0.364111 1 0.011505 0.8 0.619608 0.12549 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 16)
(Unnamed gradient 16) 0 2 Bd
[
<
36373838393A3B3C3D3D3E3F404041424343444445464647474849494A4A4B4C4C4D4D4E4E4F4F50
51515252535354545455555656585959595A5A5B5B5C5C5C5C5D5D5D5E5E5E5E5F5F5F5F5F5F6060
6061616161626262626262636363636363646464646465656566
>
<
5D5E5F60616162636465666768696A6A6B6C6D6E6F7070717273747576777879797A7B7C7D7E7F80
818283848585868788898A8B8C8A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A2
A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABB
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFEFDFBF9F7F6F4F2F1F1F1F0F0EEEDEBE9E7E4E2E1E0DFDEDC
>
<
03030404040505060607080809090A0A0B0C0C0D0E0F1010111213141415161718191A1B1C1D1E1F
2021222325262728292A2B2D2E2F30313334353638393A3C3D3F404143444547484A4B4D4E505153
545557585A5B5D5E6062636566686A6B6D6F7072747577797A7C
>
<
CCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5
A4A3A2A1A09F9E9D9C9B9A9998969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C
7B7A797877767574737271706F6E6D6C6B6A6968676665646362
>
<
9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877
767574737271706F6E6D6C6B6A6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736
>
0.12549
4 %_Br
[
0.398199 0.731441 0.862516 0.48716 0.384314 0.211765 0.12549 2 50 100 %_BS
%_0.398199 0.731441 0.862516 0.48716 0.384314 0.211765 0.12549 2 50 100 Bs
0.212497 0.364111 1 0.011505 0.8 0.619608 0.12549 2 50 0 %_BS
%_0.212497 0.364111 1 0.011505 0.8 0.619608 0.12549 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 36)
(Unnamed gradient 36) 1 2 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000010101010101
01010202020202020303030303040404040405050505050505050606060707070808080909090909
0A0A0B0B0C0C0D0D0F0F1010111112131314151516171718191A1A1B1C1C1D1D1E1F202123242526
27292A2B2C2E2F303133353637383B3C3E3F41434546484A4C4E4F525455575A5D60626467696B6D
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000101010101010202020202020202020203030303030303030404040404040505050606060606
0707080809090A0A0A0A0B0B0C0C0D0D0D0E0F0F1010101112131314141516161718191A1B1B1C1D
1E1F2020212324252627292A2B2C2E2F313234353637393A3C3E3F41434446484B4D4F5153555759
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000101010101010202020202020202020203030303030303030404040404040505050606060606
0707080809090A0A0B0B0B0B0C0C0D0E0E0F101011121212131414151617171718191A1B1C1C1D1E
1F2021212224252628292A2B2C2D2F303233353638383A3B3D3F40424445474A4C4F51535556585A
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000010101020203
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFC
FCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F8F8F8F8F7F7F7F7F6F6F6F5F5F5F4F4F4F3F3F2F2F2
F1F1F0F0EFEFEEEEEDEDECECEBEBEAE9E9E8E7E7E6E5E5E4E3E2E2E1E0DFDEDEDDDCDBDAD9D8D7D6
D5D4D3D2D1CFCECDCCCBC9C8C7C6C4C3C1C0BEBDBBBAB8B7B5B3B2B0AEADABA9A7A5A3A19F9D9B99
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFC
FCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F8F8F8F8F7F7F7F7F6F6F6F5F5F5F4F4F4F3F3F2F2F2
F1F1F0F0EFEFEEEEEDEDECECEBEBEAE9E9E8E7E7E6E5E5E4E3E2E2E1E0DFDEDEDDDCDBDAD9D8D7D6
D5D4D3D2D1CFCECDCCCBC9C8C7C6C4C3C1C0BEBDBBBAB8B7B5B3B2B0AEADABA9A7A5A3A19F9D9B99
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFC
FCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F8F8F8F8F7F7F7F7F6F6F6F5F5F5F4F4F4F3F3F2F2F2
F1F1F0F0EFEFEEEEEDEDECECEBEBEAE9E9E8E7E7E6E5E5E4E3E2E2E1E0DFDEDEDDDCDBDAD9D8D7D6
D5D4D3D2D1CFCECDCCCBC9C8C7C6C4C3C1C0BEBDBBBAB8B7B5B3B2B0AEADABA9A7A5A3A19F9D9B99
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 87 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 87 0 Bs
0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 2 50 100 %_BS
%_0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 47)
(Unnamed gradient 47) 0 2 Bd
[
<
373737373838383838383839393839393838393A3939
>
<
5A5A5C5C5B5B5D5D5C5E5E5D5D5F5E5E60605F5F6161
>
<
F2F4F5F6F8F9FAFBFCFEFFFFFFFFFFFFFFFFFFFFFFFF
>
<
03030303030303030304040404040404040404040504
>
<
CBCBCBCBCACACACACACACAC9C9C9C9C9C9C9C8C8C8C8
>
<
A0A09F9F9F9F9E9E9E9D9D9D9D9C9C9C9B9B9B9B9A9A
>
<
363534333231302F2E2D2C2A29282726252423222120
>
4 %_Br
[
0.224552 0.378515 1 0.017639 0.784314 0.603922 0.12549 2 50 100 %_BS
%_0.224552 0.378515 1 0.017639 0.784314 0.603922 0.12549 2 50 100 Bs
0.21384 0.353735 0.948669 0.010163 0.796078 0.627451 0.211765 2 50 0 %_BS
%_0.21384 0.353735 0.948669 0.010163 0.796078 0.627451 0.211765 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 50)
(Unnamed gradient 50) 0 2 Bd
[
<
666463626260606060
>
<
BBBEC0C2C4C8CACDCF
>
<
DCD8D4D1CAC7C4C2BF
>
<
7C7C7C7B7C7B7B7979
>
<
626363646465656666
>
<
3635343332302F2E2D
>
<
202122232526272829
>
4 %_Br
[
0.375189 0.813169 0.747524 0.475776 0.4 0.176471 0.160784 2 50 100 %_BS
%_0.375189 0.813169 0.747524 0.475776 0.4 0.176471 0.160784 2 50 100 Bs
0.398199 0.731441 0.862516 0.48716 0.384314 0.211765 0.12549 2 50 0 %_BS
%_0.398199 0.731441 0.862516 0.48716 0.384314 0.211765 0.12549 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 59)
(Unnamed gradient 59) 1 2 Bd
[
<
09090909090909090909090909090909090909090909090909090909090909090909090909090909
09090909090909090909090909090909090909090909090909090909090909090909090909090909
09090909090909090909090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0F0F0F0F0F0F0F10101010101011111111111212121213131313131414141515151516
16161717171718181919191A1A1A1B1B1C1C1C1C1C1D1D1E1E1E1F1F202021212324242525262627
29292A2A2B2C2C2D2E2F2F30313133343536363738393B3C3D3D3E3F40414344454647484A4B4C4E
4F505253545657595A5D5E606163646768696B6C6E6F707173747678797B7D7E808283848587898A
8C8E8F919294959798
>
<
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060707070707070707070707070707
070707070707070707070707080808080808080808080808080808090909090909090909090A0A0A
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0C0C0C0C0C0D0D0D0D0D0D0D0D0D0E0E0E0F0F0F0F10
1010101010101111121212131313141414141415151616171717181819191A1A1B1B1B1C1C1D1D1E
1F1F2020202121222324242526262728292A2A2B2C2D2E2F3030313233343535363738393A3B3C3E
3F40414243454647484B4C4D4E505153545557585A5B5C5D5F606163646668696A6C6D6E6F717375
77787A7B7D7E808183
>
<
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060707070707070707070707070707
070707070707070707070707080808080808080808080808080808090909090909090909090A0A0A
0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F1010101011
111112121212121213131314141415151616161717171718181819191A1A1B1B1C1C1C1D1D1E1E1F
202021212122222324252526282829292A2B2B2C2D2E2F3031313233343536373838393A3B3C3D3F
40414243444647484A4C4E4F50525355555658595B5C5D5E60616364656768696A6C6D6E6F717274
7577787A7B7D7F8081
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000010101010202020303040405060708090A0C0D0F1012131517191B
1D202225282B2E3133
>
<
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEEEEEE
EEEEEEEEEEEDEDEDEDEDEDEDECECECECECECEBEBEBEBEBEAEAEAEAE9E9E9E9E9E8E8E8E7E7E7E7E6
E6E6E5E5E5E5E4E4E3E3E3E2E2E2E1E1E0E0E0DFDFDEDEDDDDDDDCDCDBDBDADAD9D8D8D7D7D6D6D5
D4D4D3D3D2D1D1D0CFCECECDCCCCCBCAC9C8C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B6B5B3
B2B1B0AFAEACABAAA9A7A6A5A4A2A19F9E9D9B9A9897959492918F8D8C8A8887858381807E7C7A78
767472706E6C6A6866
>
<
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEEEEEE
EEEEEEEEEEEDEDEDEDEDEDEDECECECECECECEBEBEBEBEBEAEAEAEAE9E9E9E9E9E8E8E8E7E7E7E7E6
E6E6E5E5E5E5E4E4E3E3E3E2E2E2E1E1E0E0E0DFDFDEDEDDDDDDDCDCDBDBDADAD9D8D8D7D7D6D6D5
D4D4D3D3D2D1D1D0CFCECECDCCCCCBCAC9C8C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B6B5B3
B2B1B0AFAEACABAAA9A7A6A5A4A2A19F9E9D9B9A9897959492918F8D8C8A8887858381807E7C7A78
767472706E6C6A6866
>
<
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEEEEEE
EEEEEEEEEEEDEDEDEDEDEDEDECECECECECECEBEBEBEBEBEAEAEAEAE9E9E9E9E9E8E8E8E7E7E7E7E6
E6E6E5E5E5E5E4E4E3E3E3E2E2E2E1E1E0E0E0DFDFDEDEDDDDDDDCDCDBDBDADAD9D8D8D7D7D6D6D5
D4D4D3D3D2D1D1D0CFCECECDCCCCCBCAC9C8C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B6B5B3
B2B1B0AFAEACABAAA9A7A6A5A4A2A19F9E9D9B9A9897959492918F8D8C8A8887858381807E7C7A78
767472706E6C6A6866
>
4 %_Br
[
0.037049 0.025086 0.025086 0.000031 0.94902 0.94902 0.94902 2 87 0 %_BS
%_0.037049 0.025086 0.025086 0.000031 0.94902 0.94902 0.94902 2 87 0 Bs
0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 2 50 100 %_BS
%_0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 O
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
0 J 0 j 1 w 4 M []0 d0 XR
900 0 m
0 0 L
0 900 L
900 900 L
900 0 L
f
u
%_u
%_789.0254 136.3682 m
%_789.0254 104.4756 637.2383 78.6211 450 78.6211 c
%_262.7617 78.6211 110.9746 104.4756 110.9746 136.3682 c
%_110.9746 168.2607 262.7617 194.1152 450 194.1152 c
%_637.2383 194.1152 789.0254 168.2607 789.0254 136.3682 c
%_f
%_/ShapeBlendPathType (K) XT
%_/ShapeBlendPathID (B) XT
%_0.306798 0.242466 0.247654 0.000031 0.701961 0.701961 0.701961 Xa
%_570.3711 134.8682 m
%_570.3711 125.3418 516.4795 117.6191 450 117.6191 c
%_383.5205 117.6191 329.6289 125.3418 329.6289 134.8682 c
%_329.6289 144.3945 383.5205 152.1172 450 152.1172 c
%_516.4795 152.1172 570.3711 144.3945 570.3711 134.8682 c
%_f
%_/ShapeBlendPathType (K) XT
%_/ShapeBlendPathID (A) XT
%_U
0 Ap
0 A
u
1 Ap
0 O
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
0 J 0 j 1 w 4 M []0 d0 XR
789.0254 136.3682 m
789.0254 104.4756 637.2383 78.6211 450 78.6211 c
262.7617 78.6211 110.9746 104.4756 110.9746 136.3682 c
110.9746 168.2607 262.7617 194.1152 450 194.1152 c
637.2383 194.1152 789.0254 168.2607 789.0254 136.3682 c
f
/ShapeBlendPathType (K) XT
/ShapeBlendPathID (B) XT
0 Ap
0.011719 0.006073 0.006073 0.000031 0.980392 0.980392 0.980392 Xa
775.3594 136.2744 m
775.3594 105.7793 629.6904 81.0586 450 81.0586 c
270.3091 81.0586 124.6406 105.7793 124.6406 136.2744 c
124.6406 166.7695 270.3091 191.4902 450 191.4902 c
629.6904 191.4902 775.3594 166.7695 775.3594 136.2744 c
f
0.024048 0.014893 0.014893 0.000031 0.964706 0.964706 0.964706 Xa
761.6934 136.1807 m
761.6934 107.084 622.1436 83.4961 450 83.4961 c
277.8564 83.4961 138.3066 107.084 138.3066 136.1807 c
138.3066 165.2773 277.8564 188.8652 450 188.8652 c
622.1436 188.8652 761.6934 165.2773 761.6934 136.1807 c
f
0.040101 0.027985 0.027985 0.000031 0.945098 0.945098 0.945098 Xa
748.0273 136.0869 m
748.0273 108.3877 614.5957 85.9336 450 85.9336 c
285.4038 85.9336 151.9722 108.3877 151.9722 136.0869 c
151.9722 163.7861 285.4038 186.2402 450 186.2402 c
614.5957 186.2402 748.0273 163.7861 748.0273 136.0869 c
f
0.061616 0.044038 0.044984 0.000031 0.92549 0.92549 0.92549 Xa
734.3613 135.9932 m
734.3613 109.6924 607.0488 88.3711 450 88.3711 c
292.9512 88.3711 165.6382 109.6924 165.6382 135.9932 c
165.6382 162.2939 292.9512 183.6152 450 183.6152 c
607.0488 183.6152 734.3613 162.2939 734.3613 135.9932 c
f
0.080537 0.058412 0.062318 0.000031 0.905882 0.905882 0.905882 Xa
720.6963 135.8994 m
720.6963 110.9961 599.501 90.8076 450 90.8076 c
300.499 90.8076 179.3042 110.9961 179.3042 135.8994 c
179.3042 160.8027 300.499 180.9912 450 180.9912 c
599.501 180.9912 720.6963 160.8027 720.6963 135.8994 c
f
0.09659 0.070497 0.075074 0.000031 0.890196 0.890196 0.890196 Xa
707.0303 135.8057 m
707.0303 112.3008 591.9541 93.2451 450 93.2451 c
308.0464 93.2451 192.9697 112.3008 192.9697 135.8057 c
192.9697 159.3105 308.0464 178.3662 450 178.3662 c
591.9541 178.3662 707.0303 159.3105 707.0303 135.8057 c
f
0.11545 0.086854 0.092012 0.000031 0.870588 0.870588 0.870588 Xa
693.3643 135.7119 m
693.3643 113.6045 584.4063 95.6826 450 95.6826 c
315.5938 95.6826 206.6357 113.6045 206.6357 135.7119 c
206.6357 157.8193 315.5938 175.7412 450 175.7412 c
584.4063 175.7412 693.3643 157.8193 693.3643 135.7119 c
f
0.135805 0.104005 0.108583 0.000031 0.85098 0.85098 0.85098 Xa
679.6982 135.6182 m
679.6982 114.9082 576.8594 98.1201 450 98.1201 c
323.1411 98.1201 220.3018 114.9082 220.3018 135.6182 c
220.3018 156.3281 323.1411 173.1162 450 173.1162 c
576.8594 173.1162 679.6982 156.3281 679.6982 135.6182 c
f
0.158846 0.120211 0.125124 0.000031 0.831373 0.831373 0.831373 Xa
666.0322 135.5244 m
666.0322 116.2129 569.3115 100.5576 450 100.5576 c
330.6885 100.5576 233.9678 116.2129 233.9678 135.5244 c
233.9678 154.8359 330.6885 170.4912 450 170.4912 c
569.3115 170.4912 666.0322 154.8359 666.0322 135.5244 c
f
0.174868 0.132937 0.138125 0.000031 0.815686 0.815686 0.815686 Xa
652.3662 135.4307 m
652.3662 117.5166 561.7637 102.9951 450 102.9951 c
338.2358 102.9951 247.6338 117.5166 247.6338 135.4307 c
247.6338 153.3447 338.2358 167.8662 450 167.8662 c
561.7637 167.8662 652.3662 153.3447 652.3662 135.4307 c
f
0.198367 0.154147 0.159182 0.000031 0.796078 0.796078 0.796078 Xa
638.7002 135.3369 m
638.7002 118.8213 554.2168 105.4326 450 105.4326 c
345.7832 105.4326 261.2993 118.8213 261.2993 135.3369 c
261.2993 151.8525 345.7832 165.2412 450 165.2412 c
554.2168 165.2412 638.7002 151.8525 638.7002 135.3369 c
f
0.220584 0.17322 0.178317 0.000031 0.776471 0.776471 0.776471 Xa
625.0352 135.2432 m
625.0352 120.125 546.6689 107.8691 450 107.8691 c
353.3311 107.8691 274.9653 120.125 274.9653 135.2432 c
274.9653 150.3613 353.3311 162.6172 450 162.6172 c
546.6689 162.6172 625.0352 150.3613 625.0352 135.2432 c
f
0.242557 0.19202 0.197299 0.000031 0.756863 0.756863 0.756863 Xa
611.3691 135.1494 m
611.3691 121.4297 539.1221 110.3066 450 110.3066 c
360.8784 110.3066 288.6313 121.4297 288.6313 135.1494 c
288.6313 148.8691 360.8784 159.9922 450 159.9922 c
539.1221 159.9922 611.3691 148.8691 611.3691 135.1494 c
f
0.261295 0.206088 0.211337 0.000031 0.741176 0.741176 0.741176 Xa
597.7031 135.0557 m
597.7031 122.7334 531.5742 112.7441 450 112.7441 c
368.4258 112.7441 302.2969 122.7334 302.2969 135.0557 c
302.2969 147.3779 368.4258 157.3672 450 157.3672 c
531.5742 157.3672 597.7031 147.3779 597.7031 135.0557 c
f
0.283635 0.223056 0.228244 0.000031 0.721569 0.721569 0.721569 Xa
584.0371 134.9619 m
584.0371 124.0381 524.0273 115.1816 450 115.1816 c
375.9731 115.1816 315.9629 124.0381 315.9629 134.9619 c
315.9629 145.8857 375.9731 154.7422 450 154.7422 c
524.0273 154.7422 584.0371 145.8857 584.0371 134.9619 c
f
1 Ap
0.306798 0.242466 0.247654 0.000031 0.701961 0.701961 0.701961 Xa
570.3711 134.8682 m
570.3711 125.3418 516.4795 117.6191 450 117.6191 c
383.5205 117.6191 329.6289 125.3418 329.6289 134.8682 c
329.6289 144.3945 383.5205 152.1172 450 152.1172 c
516.4795 152.1172 570.3711 144.3945 570.3711 134.8682 c
f
/ShapeBlendPathType (K) XT
/ShapeBlendPathID (A) XT
U
(Adobe Path Blends) 1 0 92 XP
%444342410100000000008040CCCCCC7D0F00000000000000430000000000
%0000000000000000000002000000410000000000000000000000FFFFFFFF
%FFFFFFFF000000004200000000000000000080BFFFFFFFFFFFFFFFFF0F00
%0000
794.5098 476.8691 m
794.5098 286.6035 640.2676 132.3604 450 132.3604 c
259.7334 132.3604 105.4902 286.6035 105.4902 476.8691 c
105.4902 667.1367 259.7334 821.3789 450 821.3789 c
640.2676 821.3789 794.5098 667.1367 794.5098 476.8691 c
Bb
1 (New Gradient) 448.458 821.3755 -89.7434 686.9752 1 0 0 1 0 0 Bg
3.07655 -686.9683 -694.7098 -3.11122 795.8125 822.9312 Xm
36.6929 -8193.2246 -694.7098 -3.11122 759.1201 9016.1553 Bc
0.369186 -82.4362 -694.7098 -3.11122 795.8125 822.9312 Bm
0.369186 -82.4362 -694.7098 -3.11122 796.1816 740.4951 Bm
0.861433 -192.3511 -694.7098 -3.11122 796.5508 658.0586 Bm
1.47674 -329.7448 -694.7098 -3.11122 797.4121 465.7075 Bm
36.6929 -8193.2246 -694.7098 -3.11122 798.8887 135.9629 Bc
f
0 BB
0 Ap
450 142.2031 m
360.6074 142.2031 276.5654 177.0156 213.3555 240.2246 c
150.1445 303.4346 115.333 387.4775 115.333 476.8691 c
115.333 566.2617 150.1445 650.3037 213.3555 713.5137 c
276.5654 776.7246 360.6074 811.5361 450 811.5361 c
539.3936 811.5361 623.4346 776.7246 686.6445 713.5137 c
749.8545 650.3037 784.666 566.2617 784.666 476.8691 c
784.666 387.4775 749.8545 303.4346 686.6445 240.2246 c
623.4346 177.0156 539.3936 142.2031 450 142.2031 C
450 142.2031 L
Bb
1 (New Gradient 3) 448.501 811.5327 -89.7434 667.348 1 0 0 1 0 0 Bg
2.98865 -667.3414 -674.1202 -3.01901 785.5605 813.042 Xm
36.691 -8192.8164 -674.1202 -3.01901 748.8691 9005.8584 Bc
0.358638 -80.081 -674.1202 -3.01901 785.5605 813.042 Bm
0.388524 -86.7544 -674.1202 -3.01901 785.9189 732.9609 Bm
0.478184 -106.7746 -674.1202 -3.01901 786.3076 646.2065 Bm
1.19546 -266.9366 -674.1202 -3.01901 786.7861 539.4321 Bm
0.567843 -126.7949 -674.1202 -3.01901 787.9814 272.4951 Bm
36.691 -8192.8164 -674.1202 -3.01901 788.5488 145.7002 Bc
f
0 BB
450 166.8115 m
367.1797 166.8115 289.3174 199.0625 230.7559 257.626 c
172.1924 316.1885 139.9414 394.0508 139.9414 476.8691 c
139.9414 559.6895 172.1924 637.5518 230.7559 696.1133 c
289.3184 754.6758 367.1797 786.9277 450 786.9277 c
532.8203 786.9277 610.6826 754.6758 669.2441 696.1133 c
727.8066 637.5518 760.0586 559.6895 760.0586 476.8691 c
760.0586 394.0508 727.8066 316.1885 669.2441 257.626 c
610.6826 199.0625 532.8213 166.8115 450 166.8115 C
450 166.8115 L
Bb
1 (Unnamed gradient 11) 448.6113 786.9248 -89.7434 618.2762 1 0 0 1 0 0 Bg
2.76889 -618.27 -624.8465 -2.79834 761.0352 788.3242 Xm
36.6914 -8192.8965 -624.8465 -2.79834 724.3438 8981.2207 Bc
0.332266 -74.1924 -624.8465 -2.79834 761.0352 788.3242 Bm
0.359955 -80.3751 -624.8465 -2.79834 761.3672 714.1318 Bm
0.443022 -98.9232 -624.8465 -2.79834 761.7275 633.7568 Bm
1.63364 -364.7793 -624.8465 -2.79834 762.1699 534.8335 Bm
36.6914 -8192.8965 -624.8465 -2.79834 763.8037 170.0547 Bc
f
0 BB
450 181.5762 m
371.124 181.5762 296.9688 212.291 241.1953 268.0664 c
185.4219 323.8398 154.7061 397.9941 154.7061 476.8691 c
154.7061 555.7461 185.4219 629.9004 241.1953 685.6738 c
296.9697 741.4463 371.124 772.1631 450 772.1631 c
528.877 772.1631 603.0303 741.4463 658.8037 685.6738 c
714.5781 629.9004 745.2939 555.7451 745.2939 476.8691 c
745.2939 397.9941 714.5781 323.8398 658.8037 268.0664 c
603.0303 212.291 528.876 181.5762 450 181.5762 C
450 181.5762 L
Bb
1 (New Gradient) 448.6777 772.1602 -89.7434 588.8346 1 0 0 1 0 0 Bg
2.63703 -588.8287 -595.2825 -2.66594 746.3184 773.4932 Xm
36.6916 -8192.9453 -595.2825 -2.66594 709.627 8966.4385 Bc
0.316444 -70.6594 -595.2825 -2.66594 746.3184 773.4932 Bm
0.316444 -70.6594 -595.2825 -2.66594 746.6348 702.8335 Bm
0.73837 -164.872 -595.2825 -2.66594 746.9512 632.1743 Bm
1.26578 -282.6378 -595.2825 -2.66594 747.6895 467.3022 Bm
36.6916 -8192.9453 -595.2825 -2.66594 748.9551 184.6641 Bc
f
0 BB
450 191.4189 m
373.7529 191.4189 302.0703 221.1113 248.1563 275.0264 c
194.2412 328.9404 164.5488 400.624 164.5488 476.8691 c
164.5488 553.1162 194.2412 624.7988 248.1553 678.7129 c
302.0703 732.627 373.7539 762.3203 450 762.3203 c
526.2471 762.3203 597.9297 732.6279 651.8438 678.7129 c
705.7588 624.7988 735.4502 553.1162 735.4502 476.8691 c
735.4502 400.6221 705.7588 328.9404 651.8438 275.0264 c
597.9307 221.1113 526.248 191.4189 450 191.4189 C
450 191.4189 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 36) 449.9995 476.8696 0 285.4507 1 0 0 1 0 0 Bg
285.4507 0 0 -285.4507 449.9995 476.8696 Bm
f
0 BB
447.5254 474.8125 m
342.1104 474.8125 245.374 495.9102 169.6748 531.0752 C
166.2949 513.3945 164.5488 495.2676 164.5488 476.8691 c
164.5488 400.624 194.2412 328.9404 248.1563 275.0264 c
302.0703 221.1113 373.7529 191.4189 450 191.4189 c
526.248 191.4189 597.9307 221.1113 651.8438 275.0264 c
705.7588 328.9404 735.4502 400.6221 735.4502 476.8691 c
735.4502 496.0098 733.5771 514.8613 729.9219 533.2158 C
653.5684 496.7686 555.0615 474.8125 447.5254 474.8125 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 59) 447.0469 473.0469 0 294.5598 1 0 0 1 0 0 Bg
294.5598 0 0 -294.5598 447.0469 473.0469 Bm
f
0 BB
1 Ap
334.415 702.3535 m
334.415 694.1992 327.8047 687.5889 319.6504 687.5889 c
311.4961 687.5889 304.8857 694.1992 304.8857 702.3535 c
304.8857 710.5078 311.4961 717.1182 319.6504 717.1182 c
327.8047 717.1182 334.415 710.5078 334.415 702.3535 c
Bb
1 (Unnamed gradient 14) 312.5303 712.1626 -54.0246 29.5313 1 0 0 1 0 0 Bg
17.3478 -23.8987 -30.3293 -22.0157 327.6948 723.1704 Xm
4735.4272 -6523.6362 -30.3293 -22.0157 -4407.7324 7246.8066 Bc
17.3478 -23.8987 -30.3293 -22.0157 327.6948 723.1704 Bm
4735.4272 -6523.6362 -30.3293 -22.0157 345.0425 699.2715 Bc
f
0 BB
239.2646 607.5313 m
239.2646 599.377 232.6543 592.7666 224.5 592.7666 c
216.3457 592.7666 209.7354 599.377 209.7354 607.5313 c
209.7354 615.6855 216.3457 622.2959 224.5 622.2959 c
232.6543 622.2959 239.2646 615.6855 239.2646 607.5313 c
Bb
1 (Unnamed gradient 14) 215.8843 616.3789 -45.7607 29.5293 1 0 0 1 0 0 Bg
20.6013 -21.1558 -26.1738 -25.4878 228.9712 629.123 Xm
5555.9937 -5705.5293 -26.1738 -25.4878 -5327.0225 6334.6523 Bc
20.6013 -21.1558 -26.1738 -25.4878 228.9712 629.123 Bm
5555.9937 -5705.5293 -26.1738 -25.4878 249.5723 607.9673 Bc
f
0 BB
595.2578 702.3535 m
595.2578 694.1992 588.6475 687.5889 580.4932 687.5889 c
572.3398 687.5889 565.7295 694.1992 565.7295 702.3535 c
565.7295 710.5078 572.3398 717.1182 580.4932 717.1182 c
588.6475 717.1182 595.2578 710.5078 595.2578 702.3535 c
Bb
1 (Unnamed gradient 16) 572.3408 691.4907 53.1065 29.5305 1 0 0 1 0 0 Bg
17.7281 23.6171 29.9154 -22.4559 557.3818 702.7192 Xm
4994.4219 6653.5098 29.9154 -22.4559 -4437.04 -5950.791 Bc
17.7281 23.6171 29.9154 -22.4559 557.3818 702.7192 Bm
4994.4219 6653.5098 29.9154 -22.4559 575.1104 726.3364 Bc
f
0 BB
690.7363 606.876 m
690.7363 598.7217 684.126 592.1113 675.9717 592.1113 c
667.8174 592.1113 661.207 598.7217 661.207 606.876 c
661.207 615.0303 667.8174 621.6406 675.9717 621.6406 c
684.126 621.6406 690.7363 615.0303 690.7363 606.876 c
Bb
1 (Unnamed gradient 15) 665.5361 600.1548 32.7881 29.533 1 0 0 1 0 0 Bg
24.8277 15.9931 20.3922 -31.6569 655.3408 615.9824 Xm
7073.4302 4556.4434 20.3922 -31.6569 -6418.0894 -3940.4609 Bc
24.8277 15.9931 20.3922 -31.6569 655.3408 615.9824 Bm
7073.4302 4556.4434 20.3922 -31.6569 680.1689 631.9756 Bc
f
0 BB
690.7363 346.3613 m
690.7363 338.208 684.126 331.5967 675.9717 331.5967 c
667.8174 331.5967 661.207 338.208 661.207 346.3613 c
661.207 354.5166 667.8174 361.126 675.9717 361.126 c
684.126 361.126 690.7363 354.5166 690.7363 346.3613 c
Bb
1 (Unnamed gradient 15) 664.2236 352.2354 -26.5645 29.5352 1 0 0 1 0 0 Bg
26.4172 -13.2083 -16.862 -33.7247 672.6543 369.0977 Xm
7523.9048 -3761.8621 -16.862 -33.7247 -6851.2505 4130.9595 Bc
26.4172 -13.2083 -16.862 -33.7247 672.6543 369.0977 Bm
7523.9048 -3761.8621 -16.862 -33.7247 699.0713 355.8896 Bc
f
0 BB
595.2578 250.5547 m
595.2578 242.4014 588.6475 235.79 580.4932 235.79 c
572.3398 235.79 565.7295 242.4014 565.7295 250.5547 c
565.7295 258.71 572.3398 265.3193 580.4932 265.3193 c
588.6475 265.3193 595.2578 258.71 595.2578 250.5547 c
Bb
1 (Unnamed gradient 14) 589.4795 239.0146 127.9059 29.5303 1 0 0 1 0 0 Bg
-18.1424 23.3 29.4446 22.9269 574.7578 227.5518 Xm
-5121.0552 6576.896 29.4446 22.9269 5695.8135 -6349.3438 Bc
-18.1424 23.3 29.4446 22.9269 574.7578 227.5518 Bm
-5121.0552 6576.896 29.4446 22.9269 556.6152 250.8516 Bc
f
0 BB
334.0859 250.5547 m
334.0859 242.4014 327.4756 235.79 319.3213 235.79 c
311.167 235.79 304.5566 242.4014 304.5566 250.5547 c
304.5566 258.71 311.167 265.3193 319.3213 265.3193 c
327.4756 265.3193 334.0859 258.71 334.0859 250.5547 c
Bb
1 (Unnamed gradient 14) 311.2437 238.1934 56.8399 29.5327 1 0 0 1 0 0 Bg
16.1538 24.7232 31.5108 -20.5888 295.4883 248.4873 Xm
4407.1812 6745.1313 31.5108 -20.5888 -4111.6929 -6496.6436 Bc
16.1538 24.7232 31.5108 -20.5888 295.4883 248.4873 Bm
4407.1812 6745.1313 31.5108 -20.5888 311.6421 273.2109 Bc
f
0 BB
239.2637 346.0332 m
239.2637 337.8799 232.6533 331.2686 224.499 331.2686 c
216.3447 331.2686 209.7344 337.8799 209.7344 346.0332 c
209.7344 354.1885 216.3447 360.7979 224.499 360.7979 c
232.6533 360.7979 239.2637 354.1885 239.2637 346.0332 c
Bb
1 (Unnamed gradient 14) 212.7007 337.3105 36.4748 29.5311 1 0 0 1 0 0 Bg
23.7465 17.5553 22.2569 -30.1062 201.5723 352.3643 Xm
6399.7744 4731.231 22.2569 -30.1062 -6198.2021 -4378.8662 Bc
23.7465 17.5553 22.2569 -30.1062 201.5723 352.3643 Bm
6399.7744 4731.231 22.2569 -30.1062 225.3188 369.9199 Bc
f
0 BB
*u
0 Ap
440.8447 740.5156 m
440.8447 662.7031 L
421.4268 662.7031 L
421.4268 704.4209 L
421.4268 710.4443 421.2822 714.0654 420.9941 715.2832 c
420.7061 716.501 419.9131 717.4219 418.6152 718.0469 c
417.3174 718.6719 414.4248 718.9834 409.9395 718.9834 c
408.0176 718.9834 L
408.0176 728.0557 L
417.4053 730.0752 424.5342 734.2295 429.4053 740.5156 c
440.8447 740.5156 L
Bb
1 (Unnamed gradient 14) 424.4312 740.5156 -90 77.8125 1 0 0 1 0 0 Bg
-0.000003 -77.8125 -36.8272 0.000002 442.8447 740.5156 Xm
-0.000357 -8168.4312 -36.8272 0.000002 442.8452 8908.9473 Bc
-0.000003 -77.8125 -36.8272 0.000002 442.8447 740.5156 Bm
-0.000357 -8168.4312 -36.8272 0.000002 442.8447 662.7031 Bc
f
0 BB
*U
*u
490.2529 675.9678 m
490.2529 662.7031 L
447.5254 662.7031 L
447.5361 673.8057 L
460.1934 694.5039 467.7158 707.3125 470.1035 712.2314 c
472.4893 717.1494 473.6826 720.9863 473.6826 723.7422 c
473.6826 725.8564 473.3223 727.4346 472.6006 728.4766 c
471.8779 729.5176 470.7793 730.0381 469.3037 730.0381 c
467.8271 730.0381 466.7285 729.4609 466.0068 728.3076 c
465.2842 727.1543 464.9238 724.8633 464.9238 721.4346 c
464.9238 714.0332 L
447.5254 714.0332 L
447.5254 716.8691 L
447.5254 721.2266 447.749 724.6631 448.1982 727.1787 c
448.6455 729.6934 449.751 732.1689 451.5146 734.6045 c
453.2764 737.0391 455.5674 738.8818 458.3877 740.1309 c
461.207 741.3809 464.5879 742.0059 468.5283 742.0059 c
476.25 742.0059 482.0898 740.0908 486.0469 736.2627 c
490.0029 732.4326 491.9834 727.5869 491.9834 721.7236 c
491.9834 717.2695 490.8682 712.5596 488.6416 707.5928 c
486.4141 702.626 479.8535 692.085 468.959 675.9678 c
490.2529 675.9678 L
Bb
1 (Unnamed gradient 14) 469.7549 742.0059 -90 79.3027 1 0 0 1 0 0 Bg
-0.000003 -79.3027 -48.458 0.000002 493.9834 742.0059 Xm
-0.000359 -8213.7549 -48.458 0.000002 493.9834 8955.7607 Bc
-0.000003 -79.3027 -48.458 0.000002 493.9834 742.0059 Bm
-0.000359 -8213.7549 -48.458 0.000002 493.9834 662.7031 Bc
f
0 BB
*U
*u
704.6211 482.0605 m
707.5674 481.0664 709.7637 479.4395 711.2051 477.1797 c
712.6475 474.9189 713.3682 469.6211 713.3682 461.2861 c
713.3682 455.0996 712.6621 450.2979 711.2529 446.8848 c
709.8428 443.4707 707.4082 440.873 703.9482 439.0947 c
700.4873 437.3154 696.0498 436.4258 690.6348 436.4258 c
684.4824 436.4258 679.6523 437.459 676.1436 439.5254 c
672.6357 441.5918 670.3281 444.123 669.2227 447.1191 c
668.1172 450.1143 667.5645 455.3135 667.5645 462.7148 c
667.5645 468.8672 L
686.9814 468.8672 L
686.9814 456.2266 L
686.9814 452.8623 687.1816 450.7236 687.583 449.8105 c
687.9824 448.8975 688.8721 448.4404 690.25 448.4404 c
691.7559 448.4404 692.749 449.0176 693.2295 450.1709 c
693.7109 451.3242 693.9512 454.3359 693.9512 459.207 c
693.9512 464.5898 L
693.9512 467.5693 693.6143 469.748 692.9414 471.126 c
692.2686 472.5039 691.2744 473.4092 689.9619 473.8418 c
688.6475 474.2744 686.1006 474.5225 682.3203 474.5869 c
682.3203 485.8809 L
686.9336 485.8809 689.7852 486.0566 690.875 486.4102 c
691.9639 486.7617 692.749 487.5313 693.2295 488.7168 c
693.7109 489.9023 693.9512 491.7607 693.9512 494.292 c
693.9512 498.6172 L
693.9512 501.3408 693.6699 503.1357 693.1094 504 c
692.5488 504.8652 691.6758 505.2988 690.4902 505.2988 c
689.1445 505.2988 688.2227 504.8418 687.7266 503.9287 c
687.2295 503.0156 686.9814 501.0684 686.9814 498.0889 c
686.9814 491.6973 L
667.5645 491.6973 L
667.5645 498.3291 L
667.5645 505.7627 669.2627 510.7852 672.6592 513.3965 c
676.0557 516.0078 681.4551 517.3135 688.8564 517.3135 c
698.1162 517.3135 704.3955 515.5049 707.6963 511.8867 c
710.9971 508.2686 712.6475 503.2412 712.6475 496.8057 c
712.6475 492.4512 712.0537 489.3047 710.8691 487.3672 c
709.6826 485.4297 707.6006 483.6611 704.6211 482.0605 c
Bb
1 (Unnamed gradient 14) 713.3682 476.8696 180 45.8037 1 0 0 1 0 0 Bg
-45.8037 -0.000004 -0.000007 84.8877 713.3682 434.4258 Xm
-8457.3682 -0.000739 -0.000007 84.8877 9170.7363 434.4268 Bc
-45.8037 -0.000004 -0.000007 84.8877 713.3682 434.4258 Bm
-8457.3682 -0.000739 -0.000007 84.8877 667.5645 434.4258 Bc
f
0 BB
*U
*u
0 g
473.3105 268.7705 m
453.8936 268.7705 L
453.8936 272.3906 453.8525 274.6719 453.7734 275.6182 c
453.6924 276.5635 453.3076 277.3564 452.6191 277.998 c
451.9307 278.6387 450.9932 278.959 449.8076 278.959 c
448.8145 278.959 447.9971 278.6533 447.3564 278.0459 c
446.7158 277.4365 446.3477 276.6523 446.251 275.6914 c
446.1553 274.7295 446.1074 272.79 446.1074 269.876 c
446.1074 257.4756 L
447.1006 259.5576 448.5586 261.1191 450.4805 262.1602 c
452.4033 263.2031 454.7744 263.7236 457.5947 263.7236 c
461.1514 263.7236 464.29 262.7627 467.0146 260.8398 c
469.7383 258.917 471.4678 256.6104 472.2051 253.9189 c
472.9414 251.2275 473.3105 247.5898 473.3105 243.0088 c
473.3105 236.8086 L
473.3105 231.3604 473.1025 227.3076 472.6855 224.6494 c
472.2686 221.9883 471.1553 219.5293 469.3457 217.2705 c
467.5352 215.0117 465.0518 213.2588 461.8965 212.0088 c
458.7393 210.7588 455.0625 210.1348 450.8652 210.1348 c
445.6416 210.1348 441.3643 210.8555 438.0332 212.2969 c
434.6992 213.7393 432.1279 215.8135 430.3184 218.5205 c
428.5068 221.2275 427.4502 224.0723 427.1465 227.0518 c
426.8418 230.0322 426.6895 235.8145 426.6895 244.4023 c
426.6895 255.1689 L
426.6895 264.4277 426.8252 270.6191 427.0977 273.7432 c
427.3701 276.8672 428.4834 279.8242 430.4385 282.6123 c
432.3926 285.3994 435.0605 287.4893 438.4414 288.8828 c
441.8213 290.2773 445.7227 290.9746 450.1445 290.9746 c
455.5908 290.9746 460.0615 290.0928 463.5547 288.3311 c
467.0469 286.5684 469.5459 284.085 471.0518 280.8818 c
472.5576 277.6768 473.3105 273.6396 473.3105 268.7705 c
f
1 D
453.8936 244.499 m
453.8936 247.2539 453.5889 249.1436 452.9805 250.1699 c
452.3711 251.1943 451.3779 251.708 450 251.708 c
448.6543 251.708 447.6689 251.2178 447.0439 250.2412 c
446.4199 249.2646 446.1074 247.3496 446.1074 244.499 c
446.1074 230.417 L
446.1074 226.9873 446.4033 224.7451 446.9961 223.6875 c
447.5889 222.6309 448.5742 222.1016 449.9521 222.1016 c
450.7842 222.1016 451.6494 222.5098 452.5479 223.3262 c
453.4443 224.1436 453.8936 226.3467 453.8936 229.9355 c
453.8936 244.499 L
Bb
1 (Unnamed gradient 14) 450.0005 210.1348 90 80.8398 1 0 0 1 0 0 Bg
-0.000004 80.8398 50.6211 0.000002 424.6895 210.1348 Xm
-0.000358 8194.001 50.6211 0.000002 424.6899 -7983.8672 Bc
-0.000004 80.8398 50.6211 0.000002 424.6895 210.1348 Bm
-0.000358 8194.001 50.6211 0.000002 424.6895 290.9746 Bc
f
0 BB
*U
*u
0 D
0 g
186.1553 458.6543 m
205.5723 458.6543 L
205.5723 455.0332 205.6201 452.75 205.7158 451.8057 c
205.8125 450.8604 206.2041 450.0664 206.8936 449.4258 c
207.583 448.7852 208.5205 448.4648 209.7051 448.4648 c
210.6982 448.4648 211.5156 448.7686 212.1563 449.3779 c
212.7979 449.9863 213.1582 450.7715 213.2383 451.7334 c
213.3174 452.6943 213.3584 454.6318 213.3584 457.5488 c
213.3584 469.9492 L
212.3965 467.8652 210.9551 466.3037 209.0322 465.2627 c
207.1104 464.2217 204.7236 463.7002 201.8711 463.7002 c
198.3145 463.7002 195.1738 464.6621 192.4512 466.584 c
189.7275 468.5068 187.998 470.8145 187.2607 473.5059 c
186.5234 476.1973 186.1553 479.833 186.1553 484.416 c
186.1553 490.6152 L
186.1553 496.0625 186.3711 500.1152 186.8037 502.7754 c
187.2363 505.4346 188.3496 507.8936 190.1445 510.1523 c
191.9385 512.4121 194.4219 514.166 197.5938 515.416 c
200.7656 516.665 204.4502 517.29 208.6484 517.29 c
213.8389 517.29 218.0996 516.5684 221.4326 515.127 c
224.7646 513.6855 227.3438 511.6104 229.1709 508.9023 c
230.9971 506.1953 232.0547 503.3516 232.3428 500.3721 c
232.6309 497.3926 232.7754 491.625 232.7754 483.0703 c
232.7754 472.2559 L
232.7754 462.9951 232.6475 456.8037 232.3906 453.6797 c
232.1338 450.5557 231.0205 447.5996 229.0508 444.8125 c
227.0801 442.0244 224.4121 439.9336 221.0479 438.54 c
217.6836 437.1465 213.791 436.4492 209.3691 436.4492 c
203.8896 436.4492 199.4121 437.3311 195.9355 439.0928 c
192.459 440.8545 189.96 443.3379 188.4375 446.542 c
186.916 449.7461 186.1553 453.7832 186.1553 458.6543 c
f
1 D
205.5723 482.9258 m
205.5723 479.6572 205.9971 477.6387 206.8457 476.8691 c
207.6943 476.1006 208.5684 475.7168 209.4648 475.7168 c
210.8105 475.7168 211.7959 476.2051 212.4209 477.1816 c
213.0459 478.1592 213.3584 480.0732 213.3584 482.9258 c
213.3584 497.0078 L
213.3584 500.4355 213.0615 502.6797 212.4688 503.7363 c
211.876 504.7939 210.8906 505.3223 209.5127 505.3223 c
208.6797 505.3223 207.8145 504.9141 206.918 504.0967 c
206.0205 503.2793 205.5723 501.0762 205.5723 497.4883 c
205.5723 482.9258 L
Bb
1 (Unnamed gradient 14) 186.1553 476.8696 0 46.6201 1 0 0 1 0 0 Bg
46.6201 0 0 -84.8408 186.1553 519.29 Xm
7930.1553 0 0 -84.8408 -7744 519.29 Bc
46.6201 0 0 -84.8408 186.1553 519.29 Bm
7930.1553 0 0 -84.8408 232.7754 519.29 Bc
f
0 BB
*U
0 D
277.3027 342.917 m
276.2676 342.917 275.2451 343.3799 274.5664 344.2666 c
273.4092 345.7754 273.6953 347.9385 275.2051 349.0957 C
467.6592 496.5586 L
469.1699 497.7148 471.332 497.4297 472.4893 495.9189 c
473.6465 494.4082 473.3594 492.2461 471.8496 491.0889 C
279.3965 343.626 L
278.7705 343.1475 278.0342 342.917 277.3027 342.917 C
277.3027 342.917 L
Bb
1 (Unnamed gradient 50) 273.8555 420.0928 0 199.3438 1 0 0 1 0 0 Bg
199.3438 0 0 -158.7979 273.8555 499.7148 Xm
8018.3018 0 0 -158.7979 -7744.4463 499.7148 Bc
199.3438 0 0 -158.7979 273.8555 499.7148 Bm
8018.3018 0 0 -158.7979 473.1992 499.7148 Bc
f
0 BB
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
0 R
0.75021 0.679683 0.670222 0.90164 0 0 0 XA
1 J447.5322 469.4863 m
445.04 469.4863 442.6094 470.748 441.2188 473.0313 C
328.1084 658.8652 L
325.9893 662.3477 327.0938 666.8896 330.5771 669.0098 c
334.0596 671.1279 338.6006 670.0244 340.7207 666.541 C
453.8311 480.708 L
455.9521 477.2246 454.8467 472.6836 451.3633 470.5635 c
450.165 469.834 448.8398 469.4863 447.5322 469.4863 C
447.5322 469.4863 L
b
0 J435.2939 474.4629 m
434.1484 478.7891 435.4131 483.5898 438.9736 486.7813 c
444.0342 491.3184 451.8125 490.8945 456.3496 485.8359 C
572.249 356.5908 L
576.7861 351.5352 576.3613 343.7549 571.3027 339.2178 c
566.2432 334.6807 558.4658 335.1035 553.9287 340.1641 C
438.0293 469.4072 L
436.6855 470.9063 435.7764 472.6426 435.2939 474.4629 C
435.2939 474.4629 L
Bb
1 (Unnamed gradient 47) 434.8843 412.999 0 140.5083 1 0 0 1 0 0 Bg
140.5083 0 0 -160.6377 434.8843 493.3184 Xm
8179.6201 0 0 -160.6377 -7744.7358 493.3184 Bc
140.5083 0 0 -160.6377 434.8843 493.3184 Bm
8179.6201 0 0 -160.6377 575.3926 493.3184 Bc
f
0 BB
1 Ap
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
452.4463 476.8691 m
452.4463 474.1523 450.2422 471.9482 447.5254 471.9482 c
444.8066 471.9482 442.6035 474.1523 442.6035 476.8691 c
442.6035 479.5879 444.8066 481.791 447.5254 481.791 c
450.2422 481.791 452.4463 479.5879 452.4463 476.8691 c
f
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
